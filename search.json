[{"path":"https://isoorbi.isoverse.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 isoorbi authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://isoorbi.isoverse.org/articles/dual_inlet.html","id":"load-raw-files","dir":"Articles","previous_headings":"","what":"Load raw file(s)","title":"Dual Inlet","text":"","code":"# Read test data .raw file raw_file <- orbi_get_example_files(\"dual_inlet.raw\")  data_all <-   raw_file |>   orbi_read_raw(include_spectra = c(10, 100)) |>   orbi_aggregate_raw() ✔ [256ms] orbi_read_raw() read dual_inlet.raw from cache, included the spectra from 2 scans ✔ [288ms] orbi_aggregate_raw() aggregated file_info (1), scans (12.34k), peaks (51.77k), and spectra (277) from 1 file using the standard aggregator # identify nitrate isotopocules # could come from a tsv, csv, or xlsx spreadsheet instead isotopocules <- tibble(   compound = \"nitrate\",   isotopocule = c(\"M0\", \"15N\", \"17O\", \"18O\"),   mass = c(61.9878, 62.9850, 62.9922, 63.9922) ) data_all <- data_all |>   orbi_identify_isotopocules(isotopocules) |>   # disregard unidentified and missing isotopocules   orbi_filter_isotopocules() ✔ [1.4s] orbi_identify_isotopocules() identified 49.35k/51.77k peaks (95%) representing 100% of the total ion current (TIC) as isotopocules M0, 15N, 17O, and 18O using the default_tolerance of 1 mmu ✔ [15ms] orbi_filter_isotopocules() removed 2.42k / 51.77k peaks (4.7%) because they were unidentified peaks (2.42k). Remaining isotopocules: M0, 15N, 17O, and 18O."},{"path":"https://isoorbi.isoverse.org/articles/dual_inlet.html","id":"show-spectrum","dir":"Articles","previous_headings":"","what":"Show spectrum","title":"Dual Inlet","text":"","code":"data_all |> orbi_plot_spectra()"},{"path":"https://isoorbi.isoverse.org/articles/dual_inlet.html","id":"preprocess-data","dir":"Articles","previous_headings":"","what":"Preprocess data","title":"Dual Inlet","text":"satellite peaks, weak isotopocules, AGC fold outliers:","code":"# Preprocess data (this is exactly the same as with an isox file) df <-    data_all |>   # check for issues   # removes minor peaks that are in the same mass tolerance window   # of an isotopocule    orbi_flag_satellite_peaks() |>    # flag signals of isotopocules that were not detected   # in all scans   orbi_flag_weak_isotopocules(min_percent = 100) |>    # flags outlying scans that have more than 2 times or less than   # 1/2 times the average number of ions in the Orbitrap analyzer;    # another method: agc_window (see function documentation for more details)   orbi_flag_outliers(agc_fold_cutoff = 2) |>   # sets one isotopocule in the dataset as the base peak   # (denominator) for ratio calculation   orbi_define_basepeak(basepeak_def = \"M0\") ✔ [886ms] orbi_flag_satellite_peaks() confirmed there are no satellite peaks ✔ [43ms] orbi_flag_weak_isotopocules() confirmed there are no weak isotopocules: all are detected in at least 100% of scans in each of the 4 data groups (based on uidx, compound, and isotopocule) ✔ [24ms] orbi_flag_outliers() flagged 14/12338 scans (0.11%) as outliers based on 2 fold AGC cutoff, i.e. based on scans below 1/2 and above 2 times the average number of ions tic * it.ms in the Orbitrap analyzer → use orbi_plot_raw_data(y = tic * it.ms) to visualize them ✔ [1.5s] orbi_define_basepeak() set M0 as the ratio denominator and calculated 37.01k ratio values for 3 isotopocules (15N, 17O, and 18O) df |> orbi_plot_raw_data(y = tic * it.ms, y_scale = \"log\")"},{"path":"https://isoorbi.isoverse.org/articles/dual_inlet.html","id":"define-dual-inlet-blocks","dir":"Articles","previous_headings":"","what":"Define dual inlet blocks","title":"Dual Inlet","text":"","code":"# define blocks df_w_blocks <-   df |>   # general definition   orbi_define_blocks_for_dual_inlet(     # the reference block is 10 min long     ref_block_time.min = 10,      # the sample block is 10 min long     sample_block_time.min = 10,      # there is 5 min of data before the reference block starts,      # to stabilize spray conditions     startup_time.min = 5,      # it takes 2 min to make sure the right solution is measured     # after switching the valve     change_over_time.min = 2,      sample_block_name = \"sample\",     ref_block_name = \"reference\"   ) |>    # fine adjustments   # the 1st reference block is shorter by 2 min, cut from the start   orbi_adjust_block(block = 1, shift_start_time.min = 2) |>    # the start and end of the 2nd reference block are manually set   orbi_adjust_block(block = 4, set_start_time.min = 38, set_end_time.min = 44) Adding missing grouping variables: `uidx` ✔ [52ms] orbi_define_blocks_for_dual_inlet() identified 8 blocks (4 reference, 4 sample) in data from 1 file ✔ [7ms] orbi_adjust_block() made the following block adjustments in file dual_inlet: → moved block 1 start from scan.no 823 (5.00 min) to 1153 (7.01 min) ✔ [8ms] orbi_adjust_block() made the following block adjustments in file dual_inlet: → moved block 4 start from scan.no 6087 (37.00 min) to 6251 (38.00 min) → moved block 4 end from scan 7402 (45.00 min) to 7238 (44.00 min) # get blocks info blocks_info <- df_w_blocks |> orbi_get_blocks_info() blocks_info |> knitr::kable()"},{"path":[]},{"path":"https://isoorbi.isoverse.org/articles/dual_inlet.html","id":"plot-1-default-block-highlights-outliers","dir":"Articles","previous_headings":"Raw data plots","what":"Plot 1: default block highlights + outliers","title":"Dual Inlet","text":"","code":"# total ions per scan df_w_blocks |> orbi_plot_raw_data(y = intensity, y_scale = \"linear\") # isotopocule ratios - you can see that even the AGC outliers # still create decent ratios df_w_blocks |>  orbi_plot_raw_data(y = ratio)"},{"path":"https://isoorbi.isoverse.org/articles/dual_inlet.html","id":"plot-2-highlight-blocks-in-data-no-outliers","dir":"Articles","previous_headings":"Raw data plots","what":"Plot 2: highlight blocks in data + no outliers","title":"Dual Inlet","text":"","code":"df_w_blocks |>    orbi_plot_raw_data(     isotopocules = \"15N\",     y = ratio,     color = NULL,     add_all_blocks = TRUE,     show_outliers = FALSE   ) +   # add other ggplot elements, e.g. more specific axis labels   labs(x = \"time [min]\", y = \"15N/M0 ratio\")"},{"path":"https://isoorbi.isoverse.org/articles/dual_inlet.html","id":"plot-3-highlight-sample-blocks-on-top","dir":"Articles","previous_headings":"Raw data plots","what":"Plot 3: highlight sample blocks on top","title":"Dual Inlet","text":"","code":"df_w_blocks |>    orbi_plot_raw_data(     isotopocules = \"15N\",     y = ratio,     add_all_blocks = TRUE,     show_outliers = FALSE,     color = factor(block)   ) +   labs(x = \"time [min]\", y = \"15N/M0 ratio\", color = \"block #\")"},{"path":"https://isoorbi.isoverse.org/articles/dual_inlet.html","id":"data-summaries","dir":"Articles","previous_headings":"","what":"Data summaries","title":"Dual Inlet","text":"","code":"# calculate summary df_w_summary <-    df_w_blocks |>   # segment (optional)   orbi_segment_blocks(into_segments = 3) |>   # calculate results, including for the unused parts of the data blocks   orbi_summarize_results(     ratio_method = \"sum\",     include_unused_data = TRUE   ) ✔ [40ms] orbi_segment_blocks() segmented 8 data blocks in 1 file creating 3 segments per block (on average) with 420 scans per segment (on average) ✔ [592ms] orbi_summarize_results() summarized ratios from 36.97k peak (excluding 42 flagged peaks; including 10.35k unused peaks) using the sum method and grouping the data by uidx, filename, compound, basepeak, isotopocule, block, sample_name, segment, data_group, and data_type # export file info and summary to excel df_w_summary |> orbi_export_data_to_excel(   file = \"output.xlsx\",   include = c(\"file_info\", \"summary\") ) ✔ [575ms] orbi_export_data_to_excel() exported the dataset (1 row of file_info and 96 rows of summary) to output.xlsx"},{"path":"https://isoorbi.isoverse.org/articles/dual_inlet.html","id":"plot-1-ratios-summary-by-block-and-segment","dir":"Articles","previous_headings":"Data summaries","what":"Plot 1: ratios summary by block and segment","title":"Dual Inlet","text":"","code":"# get out the summary and plot all isotopocules using a ggplot from scratch df_w_summary |>   orbi_get_data(summary = everything()) |>   filter(data_type == \"data\") |>   mutate(block_seg = sprintf(\"%s.%s\", block, segment) |> fct_inorder()) |>   # data   ggplot() +   aes(     x = block_seg,     y = ratio, ymin = ratio - ratio_sem, ymax = ratio + ratio_sem,     color = sample_name   ) +   geom_pointrange() +   facet_grid(isotopocule ~ ., scales = \"free_y\") +   # scales   scale_color_brewer(palette = \"Set1\") +   theme_bw() +   labs(x = \"block.segment\", y = \"ratio\") ✔ [9ms] orbi_get_data() retrieved 96 records from the combination of file_info (1) and summary (96) via uidx"},{"path":"https://isoorbi.isoverse.org/articles/dual_inlet.html","id":"plot-2-ratios-with-block-backgrounds-and-raw-data","dir":"Articles","previous_headings":"Data summaries","what":"Plot 2: ratios with block backgrounds and raw data","title":"Dual Inlet","text":"","code":"# make a plot for 15N plot2 <- df_w_blocks |>   orbi_get_data(scans = everything(), peaks = everything()) |>   filter(isotopocule == \"15N\") |>   mutate(panel = \"raw ratios\") |>   # raw data plot   orbi_plot_raw_data(     y = ratio,     color = NULL,     add_all_blocks = TRUE,     show_outliers = FALSE   ) +    # ratio summary data   geom_pointrange(     data = function(df) {       df_w_summary |>          orbi_get_data(summary = everything()) |>         filter(as.character(isotopocule) == df$isotopocule[1]) |>          mutate(panel = \"summary\")     },     map = aes(       x = mean_time.min, y = ratio,        ymin = ratio - ratio_sem, ymax = ratio + ratio_sem,       shape = sample_name     ),      size = 0.5   ) +   facet_grid(panel ~ ., switch = \"y\") +   theme(strip.placement = \"outside\") +   labs(y = NULL, title = \"15N/M0\") ✔ [17ms] orbi_get_data() retrieved 37.01k records from the combination of file_info (1), scans (12.34k), and peaks (37.01k) via uidx and scan.no plot2 ✔ [9ms] orbi_get_data() retrieved 96 records from the combination of file_info (1) and summary (96) via uidx # same but with 18O plot2 %+%    (df_w_blocks |> orbi_get_data(scans = everything(), peaks = everything()) |>    filter(isotopocule == \"18O\") |> mutate(panel = \"raw ratios\")) +   labs(title = \"18O/M0\") ✔ [17ms] orbi_get_data() retrieved 37.01k records from the combination of file_info (1), scans (12.34k), and peaks (37.01k) via uidx and scan.no ✔ [9ms] orbi_get_data() retrieved 96 records from the combination of file_info (1) and summary (96) via uidx"},{"path":[]},{"path":"https://isoorbi.isoverse.org/articles/flow_injection.html","id":"load-raw-files","dir":"Articles","previous_headings":"Data","what":"Load raw file(s)","title":"Flow Injection","text":"","code":"# read raw files including 1 spectrum raw_files <-   c(\"ac5.RAW\", \"ac6.RAW\", \"s3744.RAW\") |>   orbi_get_example_files() |>   orbi_read_raw(include_spectra = 100) |>   orbi_aggregate_raw() ✔ [267ms] orbi_read_raw() read ac5.RAW from cache, included the spectrum from 1 scan ✔ [97ms] orbi_read_raw() read ac6.RAW from cache, included the spectrum from 1 scan ✔ [76ms] orbi_read_raw() read s3744.RAW from cache, included the spectrum from 1 scan ✔ [568ms] orbi_read_raw() finished reading 3 files ✔ [850ms] orbi_aggregate_raw() aggregated file_info (3), scans (16.63k), peaks (514.98k), and spectra (1.98k) from 3 files using the standard aggregator # quick glance at the spectra (m/z range 96 to 102) raw_files |> orbi_plot_spectra(96, 102)"},{"path":"https://isoorbi.isoverse.org/articles/flow_injection.html","id":"identify-isotopocules","dir":"Articles","previous_headings":"Data","what":"Identify isotopocules","title":"Flow Injection","text":"","code":"# identify sulfate isotopocules # could come from a tsv, csv, or xlsx spreadsheet instead isotopocules <- tibble(   compound = \"HSO4-\",   isotopocule = c(     \"M0\", \"33S\", \"17O\", \"34S\", \"18O\",      # also look for a few clumped isotopocules     \"33S18O\", \"34S17O\", \"36S\", \"18O18O\"),   mass = c(     96.96000, 97.95940, 97.96420, 98.95580, 98.96430,      99.9632, 99.9590, 100.9551, 100.968046) )  # identify raw_files_w_isotopocules <- raw_files |>   orbi_identify_isotopocules(isotopocules) |>   # disregard unidentified isotopocules but keep missing   orbi_filter_isotopocules(keep_missing = TRUE) |>   # check for minor peaks that are in the same mass tolerance   # window of an isotopocule    orbi_flag_satellite_peaks() ! [3.5s] orbi_identify_isotopocules() identified 84.85k/514.98k peaks (16%) representing 94% of the total ion current (TIC) as isotopocules M0, 33S, 17O, 34S, 18O, 36S, 33S18O, 34S17O, and 18O18O using the default_tolerance of 1 mmu but encountered 1 warning   → ! isotopocules M0, 33S, 17O, 34S, 18O, 33S18O, 34S17O, 36S, and 18O18O are   missing from some scans (64.84k missing peaks in total) - make sure to   evaluate coverage with e.g. orbi_plot_isotopocule_coverage() ✔ [14ms] orbi_filter_isotopocules() removed 430.13k / 579.82k peaks (74%) because they were unidentified peaks (430.13k). Remaining isotopocules: M0, 33S, 17O, 34S, 18O, 34S17O, 33S18O, 36S, and 18O18O. ✔ [2.7s] orbi_flag_satellite_peaks() confirmed there are no satellite peaks # plot again now with the isotopocules identified raw_files_w_isotopocules |> orbi_plot_spectra(96, 102) # check coverage (as suggested during isotopocule identifiation) raw_files_w_isotopocules |> orbi_plot_isotopocule_coverage()"},{"path":"https://isoorbi.isoverse.org/articles/flow_injection.html","id":"processing","dir":"Articles","previous_headings":"","what":"Processing","title":"Flow Injection","text":"’s clear plots don’t good coverage clumped isotopocules 36S (.e. missing /many scans). won’t work anyways ’s good visual example much harder detect. Let’s take look AGC cutoff flagged samples Ions analyzer Ions isotopocules Seems like issue mostly towards end s3744 analysis. resulting ratios? Isotopocule ratios vs M0 ratios suggest really issue end s3744 run. flagged outliers, automatically included summary calculation resulting ratios.","code":"# Preprocess data (this is exactly the same as with an isox file) data <-    raw_files_w_isotopocules |>   # focus on the main single substitutions   orbi_filter_isotopocules(c(\"M0\", \"33S\", \"17O\", \"34S\", \"18O\")) |>   # double check the remainng isotopcoules   orbi_flag_weak_isotopocules(min_percent = 99) |>    # flags outlying scans that have more than 2 times or less than   # 1/2 times the average number of ions in the Orbitrap analyzer   orbi_flag_outliers(agc_fold_cutoff = 2) |>   # sets one isotopocule in the dataset as the base peak   # (denominator) for ratio calculation   orbi_define_basepeak(basepeak_def = \"M0\") ✔ [24ms] orbi_filter_isotopocules() removed 66.66k / 149.69k peaks (45%) because they were missing isotopocules (64.84k), or not the selected isotopocule M0, 33S, 17O, 34S, and 18O (1.82k). ✔ [42ms] orbi_flag_weak_isotopocules() confirmed there are no weak isotopocules: all are detected in at least 99% of scans in each of the 15 data groups (based on uidx, compound, and isotopocule) ✔ [26ms] orbi_flag_outliers() flagged 44/16632 scans (0.26%) as outliers based on 2 fold AGC cutoff, i.e. based on scans below 1/2 and above 2 times the average number of ions tic * it.ms in the Orbitrap analyzer, in 3 data groups (based on uidx) → use orbi_plot_raw_data(y = tic * it.ms) to visualize them ✔ [2.1s] orbi_define_basepeak() set M0 as the ratio denominator and calculated 66.40k ratio values for 4 isotopocules (33S, 17O, 34S, and 18O) # and in terms of the ions orbi_plot_raw_data(data, y = ions.incremental, y_scale = \"log\") # and in terms of the ions orbi_plot_raw_data(data, y = ions.incremental, y_scale = \"log\") data |> orbi_plot_raw_data(y = ratio)"},{"path":"https://isoorbi.isoverse.org/articles/flow_injection.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Flow Injection","text":"Isotopocule ratios summary","code":"# summarize the ratio summaries data_summary <-    data |>   orbi_summarize_results(ratio_method = \"sum\") ✔ [91ms] orbi_summarize_results() summarized ratios from 66.33k peak (excluding 68 flagged peaks; excluding 0 unused peaks) using the sum method and grouping the data by uidx, filename, compound, basepeak, and isotopocule # data data_summary |>   orbi_get_data(summary = c(\"compound\", \"isotopocule\", starts_with(\"ratio\"))) ✔ [9ms] orbi_get_data() retrieved 12 records from the combination of file_info (3) and summary (12) via uidx # A tibble: 12 × 7     uidx filename  compound isotopocule   ratio ratio_relative_sem_p…¹ ratio_sem    <int> <chr>     <fct>    <fct>         <dbl>                  <dbl>     <dbl>  1     1 ac5.RAW   HSO4-    33S         0.00903                  1.18    1.06e-5  2     1 ac5.RAW   HSO4-    17O         0.00165                  2.92    4.81e-6  3     1 ac5.RAW   HSO4-    34S         0.0599                   0.459   2.75e-5  4     1 ac5.RAW   HSO4-    18O         0.0107                   1.06    1.13e-5  5     2 ac6.RAW   HSO4-    33S         0.00902                  0.99    8.92e-6  6     2 ac6.RAW   HSO4-    17O         0.00164                  2.47    4.05e-6  7     2 ac6.RAW   HSO4-    34S         0.0595                   0.4     2.38e-5  8     2 ac6.RAW   HSO4-    18O         0.0106                   0.911   9.67e-6  9     3 s3744.RAW HSO4-    33S         0.00894                  1.01    9.07e-6 10     3 s3744.RAW HSO4-    17O         0.00164                  2.58    4.23e-6 11     3 s3744.RAW HSO4-    34S         0.0584                   0.414   2.42e-5 12     3 s3744.RAW HSO4-    18O         0.0106                   0.944   1.00e-5 # ℹ abbreviated name: ¹​ratio_relative_sem_permil # export file info and summary to excel data_summary |> orbi_export_data_to_excel(   file = \"output.xlsx\",   include = c(\"file_info\", \"summary\") ) ✔ [410ms] orbi_export_data_to_excel() exported the dataset (3 rows of file_info and 12 rows of summary) to output.xlsx fig <-    data_summary |>   # get out all summary data   orbi_get_data(summary = everything()) |>   # generate a custom label for the data panels   mutate(panel = glue::glue(\"ratio\\n{isotopocule} / {basepeak}\")) |>   # plot   ggplot() +   aes(     x = filename,     y = ratio, ymin = ratio - ratio_sem, ymax = ratio + ratio_sem,     color = filename, shape = filename   ) +   geom_pointrange() +   scale_color_brewer(palette = \"Dark2\") +   scale_y_continuous(breaks = scales::pretty_breaks(5)) +   facet_grid(panel ~ ., scales = \"free_y\", switch = \"y\") +   # styling   theme_bw() +   theme(     text = element_text(size = 16),     panel.grid = element_blank(),     strip.text.y.left = element_text(angle = 0),     strip.placement = \"outside\",     strip.background = element_blank()   ) +   labs(y = NULL, x = NULL) ✔ [10ms] orbi_get_data() retrieved 12 records from the combination of file_info (3) and summary (12) via uidx fig"},{"path":"https://isoorbi.isoverse.org/articles/functionality_guide.html","id":"read-raw-files","dir":"Articles","previous_headings":"","what":"Read raw files","title":"Functionality Guide","text":"","code":"# raw files directory raw_folder <- system.file(package = \"isoorbi\", \"extdata\")  # read files raw_files <-   raw_folder |>    orbi_find_raw(pattern = \"nitrate\") |>    orbi_read_raw(include_spectra = c(1, 10, 100)) |>   suppressMessages()  # show summary for the read files raw_files ──────────────── 2 raw files - combine with orbi_aggregate_raw() ─────────────── 1. nitrate_test_10scans.raw has 10 scans with 126 peaks; + loaded 2 spectra (618 points) 2. nitrate_test_1scan.raw   has  1 scans with  12 peaks; + loaded 1 spectrum (325 points)"},{"path":"https://isoorbi.isoverse.org/articles/functionality_guide.html","id":"combine-aggregate-data","dir":"Articles","previous_headings":"","what":"Combine (aggregate) data","title":"Functionality Guide","text":"","code":"# aggregate raw data agg_data <- raw_files |> orbi_aggregate_raw() ✔ [540ms] orbi_aggregate_raw() aggregated file_info (2), scans (11), peaks (138), and spectra (943) from 2 files using the standard aggregator agg_data ─────── aggregated data from 2 raw files - retrieve with orbi_get_data() ─────── → file_info (2): uidx, filepath, filename, creation_date, in_aquisition, Operator, FileDescription, MassResolution, SpectraCount, FirstSpectrum, LastSpectrum, StartTime, EndTime, LowMass, HighMass, InstrumentCount, InstrumentModel, InstrumentName, SerialNumber, SoftwareVersion, HardwareVersion, RawFileVersion, InstrumentUnits, Comment, SampleId, SampleName, SampleType, SampleWeight, SampleVolume, Barcode, RowNumber, Vial, InjectionVolume, DilutionFactor, IstdAmount, CalibrationLevel, InstrumentMethodFile, CalibrationFile, ProcessingMethodFile, UserText0, UserText1, UserText2, UserText3, UserText4 → scans (11): uidx, scan.no, time.min, tic, it.ms, resolution, microscans, basePeakMz, basePeakIntensity, lowMass, highMass, rawOvFtT, intensCompFactor, agc, agcTarget, numberLockmassesFound, analyzerTemperature; (not aggregated: IsCentroidScan, ScanType, Scan Description, Multiple Injection, Multi Inject Info, Scan Segment, Scan Event, Master Index, Master Scan Number, Charge State, Monoisotopic M/Z, Error in isotopic envelope fit, Max. Ion Time (ms), MS2 Isolation Width, MS2 Isolation Offset, HCD Energy, HCD Energy V, === Mass Calibration: ===, Conversion Parameter B, Conversion Parameter C, Temperature Comp. (ppm), RF Comp. (ppm), Space Charge Comp. (ppm), Resolution Comp. (ppm), Number of Lock Masses, Lock Mass #1 (m/z), Lock Mass #2 (m/z), Lock Mass #3 (m/z), LM Search Window (ppm), LM Search Window (mmu), Last Locking (sec), LM m/z-Correction (ppm), === Ion Optics Settings: ===, S-Lens RF Level, ==== Diagnostic Data: ====, Application Mode, Mild Trapping Mode, APD, Res. Dep. Intens, Q Trans Comp, PrOSA NumF, PrOSA Comp, PrOSA ScScr, Dynamic RT Shift (min), Analytical OT usage (%), LC FWHM parameter, PS Inj. Time (ms), AGC PS Mode, AGC PS Diag, AGC Target Adjust, AGC Diag 1, AGC Diag 2, HCD abs. Offset, Source CID eV, AGC Fill, Injection t0, t0 FLP, Iso Para R, Inj Para R, Access Id, Analog In A (V), Analog In B (V), FAIMS Attached, FAIMS Voltage On, FAIMS CV) → peaks (138): uidx, scan.no, mzMeasured, intensity, baseline, peakNoise, peakResolution, isRefPeak, isLockPeak → spectra (943): uidx, scan.no, mz, intensity → problems: has no issues"},{"path":"https://isoorbi.isoverse.org/articles/functionality_guide.html","id":"optional-use-a-different-aggregator","dir":"Articles","previous_headings":"Combine (aggregate) data","what":"Optional: use a different aggregator","title":"Functionality Guide","text":"minimal aggregator contains smaller set columns aggregate. extended aggregator elaborate, providing access additional columns raw data files.","code":"# example: minimal vs. extended aggregator orbi_get_aggregator(\"minimal\") ────────────────────────────── Aggregator minimal ────────────────────────────── Dataset file_info:  → filename = as.character(sub(FileName, pattern = \".raw\", replacement = \"\", fixed = TRUE))  → creation_date = as.POSIXct(CreationDate)  → in_aquisition = as.logical(InAquisition) Dataset scans:  → scan.no = as.integer(scan.no)  → time.min = as.numeric(StartTime)  → tic = as.numeric(TIC)  → it.ms = as.numeric(`Ion Injection Time (ms)`)  → resolution = as.numeric(one_of(`FT Resolution`, `Orbitrap Resolution`))  → microscans = as.integer(`Micro Scan Count`) Dataset peaks:  → scan.no = as.integer(scan.no)  → mzMeasured = as.numeric(mass)  → intensity = as.numeric(intensity)  → baseline = as.numeric(baseline)  → peakNoise = as.numeric(noise)  → peakResolution = as.numeric(resolution)  → isRefPeak = as.logical(is_ref)  → isLockPeak = as.logical(is_lock_peak) Dataset spectra:  → scan.no = as.integer(scan.no)  → mz = as.numeric(mass)  → intensity = as.numeric(intensity) orbi_get_aggregator(\"extended\") ────────────────────────────── Aggregator extended ───────────────────────────── Dataset file_info:  → filename = as.character(sub(FileName, pattern = \".raw\", replacement = \"\", fixed = TRUE))  → creation_date = as.POSIXct(CreationDate)  → in_aquisition = as.logical(InAquisition)  → (.*) = as.character(all_matches(\"(.*)\")) Dataset scans:  → scan.no = as.integer(scan.no)  → time.min = as.numeric(StartTime)  → tic = as.numeric(TIC)  → it.ms = as.numeric(`Ion Injection Time (ms)`)  → resolution = as.numeric(one_of(`FT Resolution`, `Orbitrap Resolution`))  → microscans = as.integer(`Micro Scan Count`)  → basePeakMz = as.numeric(BasePeakMass)  → basePeakIntensity = as.numeric(BasePeakIntensity)  → lowMass = as.numeric(LowMass)  → highMass = as.numeric(HighMass)  → rawOvFtT = as.numeric(RawOvFtT)  → intensCompFactor = as.numeric(`OT Intens Comp Factor`)  → agc = as.character(AGC)  → agcTarget = as.integer(`AGC Target`)  → numberLockmassesFound = as.integer(`Number of LM Found`)  → analyzerTemperature = as.numeric(`Analyzer Temperature`)  → (.*) = as.character(all_matches(\"(.*)\")) Dataset peaks:  → scan.no = as.integer(scan.no)  → mzMeasured = as.numeric(mass)  → intensity = as.numeric(intensity)  → baseline = as.numeric(baseline)  → peakNoise = as.numeric(noise)  → peakResolution = as.numeric(resolution)  → isRefPeak = as.logical(is_ref)  → isLockPeak = as.logical(is_lock_peak) Dataset spectra:  → scan.no = as.integer(scan.no)  → mz = as.numeric(mass)  → intensity = as.numeric(intensity) # using the extended aggregator instead of the default (standard) raw_files |> orbi_aggregate_raw(aggregator = \"extended\") ✔ [924ms] orbi_aggregate_raw() aggregated file_info (2), scans (11), peaks (138), and spectra (943) from 2 files using the extended aggregator ─────── aggregated data from 2 raw files - retrieve with orbi_get_data() ─────── → file_info (2): uidx, filepath, filename, creation_date, in_aquisition, Operator, FileDescription, MassResolution, SpectraCount, FirstSpectrum, LastSpectrum, StartTime, EndTime, LowMass, HighMass, InstrumentCount, InstrumentModel, InstrumentName, SerialNumber, SoftwareVersion, HardwareVersion, RawFileVersion, InstrumentUnits, Comment, SampleId, SampleName, SampleType, SampleWeight, SampleVolume, Barcode, RowNumber, Vial, InjectionVolume, DilutionFactor, IstdAmount, CalibrationLevel, InstrumentMethodFile, CalibrationFile, ProcessingMethodFile, UserText0, UserText1, UserText2, UserText3, UserText4 → scans (11): uidx, scan.no, time.min, tic, it.ms, resolution, microscans, basePeakMz, basePeakIntensity, lowMass, highMass, rawOvFtT, intensCompFactor, agc, agcTarget, numberLockmassesFound, analyzerTemperature, IsCentroidScan, ScanType, Scan Description, Multiple Injection, Multi Inject Info, Scan Segment, Scan Event, Master Index, Master Scan Number, Charge State, Monoisotopic M/Z, Error in isotopic envelope fit, Max. Ion Time (ms), MS2 Isolation Width, MS2 Isolation Offset, HCD Energy, HCD Energy V, === Mass Calibration: ===, Conversion Parameter B, Conversion Parameter C, Temperature Comp. (ppm), RF Comp. (ppm), Space Charge Comp. (ppm), Resolution Comp. (ppm), Number of Lock Masses, Lock Mass #1 (m/z), Lock Mass #2 (m/z), Lock Mass #3 (m/z), LM Search Window (ppm), LM Search Window (mmu), Last Locking (sec), LM m/z-Correction (ppm), === Ion Optics Settings: ===, S-Lens RF Level, ==== Diagnostic Data: ====, Application Mode, Mild Trapping Mode, APD, Res. Dep. Intens, Q Trans Comp, PrOSA NumF, PrOSA Comp, PrOSA ScScr, Dynamic RT Shift (min), Analytical OT usage (%), LC FWHM parameter, PS Inj. Time (ms), AGC PS Mode, AGC PS Diag, AGC Target Adjust, AGC Diag 1, AGC Diag 2, HCD abs. Offset, Source CID eV, AGC Fill, Injection t0, t0 FLP, Iso Para R, Inj Para R, Access Id, Analog In A (V), Analog In B (V), FAIMS Attached, FAIMS Voltage On, FAIMS CV → peaks (138): uidx, scan.no, mzMeasured, intensity, baseline, peakNoise, peakResolution, isRefPeak, isLockPeak → spectra (943): uidx, scan.no, mz, intensity → problems: has no issues"},{"path":"https://isoorbi.isoverse.org/articles/functionality_guide.html","id":"optional-check-for-problems","dir":"Articles","previous_headings":"Combine (aggregate) data","what":"Optional: check for problems","title":"Functionality Guide","text":"problems reading /aggregating raw data empty.","code":"raw_files |> orbi_get_problems() # A tibble: 0 × 6 # ℹ 6 variables: uidx <int>, file <chr>, type <chr>, call <chr>, message <chr>, #   condition <list> agg_data |> orbi_get_problems() # A tibble: 0 × 6 # ℹ 6 variables: uidx <int>, file <chr>, type <chr>, call <chr>, message <chr>, #   condition <list>"},{"path":"https://isoorbi.isoverse.org/articles/functionality_guide.html","id":"identify-isotopocules","dir":"Articles","previous_headings":"","what":"Identify isotopocules","title":"Functionality Guide","text":"","code":"# list of isotopocules (can alternatively be in a tsv/csv/xlsx file) isotopocules <- tibble(     compound = \"nitrate\",     isotopolog = c(\"M0\", \"15N\", \"17O\", \"18O\"),     mass = c(61.9878, 62.9850, 62.9922, 63.9922),     tolerance = 1,     charge = 1   )  # identify data <- agg_data |> orbi_identify_isotopocules(isotopocules) ✔ [38ms] orbi_identify_isotopocules() identified 44/138 peaks (32%) representing 100% of the total ion current (TIC) as isotopocules M0, 15N, 17O, and 18O"},{"path":"https://isoorbi.isoverse.org/articles/functionality_guide.html","id":"check-satellite-peaks","dir":"Articles","previous_headings":"","what":"Check satellite peaks","title":"Functionality Guide","text":"","code":"# this can happen here or later on in the workflow # in the case of these files there are no satellite peaks data |> orbi_flag_satellite_peaks() |> orbi_plot_satellite_peaks() ✔ [9ms] orbi_flag_satellite_peaks() confirmed there are no satellite peaks `geom_line()`: Each group consists of only one observation. ℹ Do you need to adjust the group aesthetic?"},{"path":"https://isoorbi.isoverse.org/articles/functionality_guide.html","id":"check-coverage","dir":"Articles","previous_headings":"","what":"Check coverage","title":"Functionality Guide","text":"","code":"# this can happen here or later on in the workflow data |> orbi_get_isotopocule_coverage() # A tibble: 8 × 10    uidx filename        compound isotopocule data_stretch n_points start_scan.no   <int> <fct>           <fct>    <fct>              <int>    <int>         <int> 1     1 nitrate_test_1… nitrate  M0                     0       10             1 2     1 nitrate_test_1… nitrate  15N                    0       10             1 3     1 nitrate_test_1… nitrate  17O                    0       10             1 4     1 nitrate_test_1… nitrate  18O                    0       10             1 5     2 nitrate_test_1… nitrate  M0                     0        1             1 6     2 nitrate_test_1… nitrate  15N                    0        1             1 7     2 nitrate_test_1… nitrate  17O                    0        1             1 8     2 nitrate_test_1… nitrate  18O                    0        1             1 # ℹ 3 more variables: end_scan.no <int>, start_time.min <dbl>, #   end_time.min <dbl> data |> orbi_plot_isotopocule_coverage()"},{"path":"https://isoorbi.isoverse.org/articles/functionality_guide.html","id":"retrieve-get-data","dir":"Articles","previous_headings":"","what":"Retrieve (get) data","title":"Functionality Guide","text":"","code":"agg_data |> orbi_get_data(peaks = everything()) ✔ [10ms] orbi_get_data() retrieved 138 records from the combination of file_info (2) and peaks (138) via uidx # A tibble: 138 × 10     uidx filename scan.no mzMeasured intensity baseline peakNoise peakResolution    <int> <chr>      <int>      <dbl>     <dbl>    <dbl>     <dbl>          <dbl>  1     1 nitrate…       1       62.0     1211.     8.32      513.          70900  2     1 nitrate…       1       62.0     1463.     8.32      513.          94100  3     1 nitrate…       1       62.0     1172.     8.31      513.          80300  4     1 nitrate…       1       62.0     1116.     8.30      513.          87900  5     1 nitrate…       1       62.0  4046979      8.28      513.         114902  6     1 nitrate…       1       62.0     1798.     8.26      513.          86300  7     1 nitrate…       1       62.0     1444.     8.26      513.          93200  8     1 nitrate…       1       62.0     1346.     8.25      513.          84700  9     1 nitrate…       1       62.0     1469.     8.25      513.          92400 10     1 nitrate…       1       62.1     1043.     8.16      513.          89900 # ℹ 128 more rows # ℹ 2 more variables: isRefPeak <lgl>, isLockPeak <lgl>"},{"path":"https://isoorbi.isoverse.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Caj Neubauer. Author, maintainer, copyright holder. Sebastian Kopf. Author. Kristýna Kantnerová. Author.","code":""},{"path":"https://isoorbi.isoverse.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kantnerova et al.","code":"@Article{,   author = {Kristyna Kantnerova and Nils Kuhlbusch and Dieter Juchelka and Andreas Hilkert and Sebastian H. Kopf and Cajetan Neubauer},   title = {A guide to precise measurements of isotope abundance by ESI-Orbitrap MS},   publisher = {Nature Publishing Group UK London},   journal = {Nature Protocols},   year = {2024},   pages = {1-32},   doi = {10.1038/s41596-024-00981-5}, }"},{"path":[]},{"path":"https://isoorbi.isoverse.org/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Process Orbitrap Isotopocule Data","text":"goal isoorbi R package help process isotopocule measurements Orbitrap Isotope Solutions mass spectrometer. can read .raw files (recommended approach) well .isox output created IsoX (legacy approach).","code":""},{"path":"https://isoorbi.isoverse.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Process Orbitrap Isotopocule Data","text":"can install current CRAN version isoorbi : use latest updates, can install development version isoorbi GitHub. Windows, make sure install equivalent version Rtools version R (can find version getRversion() R console - note isoorbi requires R version 4.4 newer). Important: isoorbi version 1.5.0, possible read .raw files directly using isoraw reader built package. first time read .raw file, asked agree Thermo’s license agreement proceed. Implementation isoraw reader, possible without example provided Jim Shofstahl part Thermo’s RawFileReader raw file reader developed Witold Wolski, Christian Panse, Christian Trachsel, Tobias Kockmann part rawrr package.","code":"install.packages(\"isoorbi\") # checks that you are set up to build R packages from source if(!requireNamespace(\"pkgbuild\", quietly = TRUE)) install.packages(\"pkgbuild\") pkgbuild::check_build_tools()  # installs the latest isoorbi package from GitHub if(!requireNamespace(\"pak\", quietly = TRUE)) install.packages(\"pak\") pak::pak(\"isoverse/isoorbi\")"},{"path":[]},{"path":"https://isoorbi.isoverse.org/index.html","id":"read-raw-data-file","dir":"","previous_headings":"Show me some code","what":"Read raw data file","title":"Process Orbitrap Isotopocule Data","text":"","code":"# load library library(isoorbi)  # provide the path to your data folder here: my_data_folder <- file.path(\"project\", \"data\")  # and search for raw files in that folder file_paths <- orbi_find_raw(my_data_folder)  # for this example, we use a small raw test file bundled with the # package instead (remove this line if working with your own data) file_paths <- orbi_get_example_files(\"nitrate_test_10scans.raw\")  # read the raw file incluing 2 of the raw spectra raw_files <- file_paths |>     orbi_read_raw(include_spectra = c(1, 10)) |>     orbi_aggregate_raw()  # plot the spectra raw_files |> orbi_plot_spectra()"},{"path":"https://isoorbi.isoverse.org/index.html","id":"identify-isotopcules","dir":"","previous_headings":"Show me some code","what":"Identify isotopcules","title":"Process Orbitrap Isotopocule Data","text":"","code":"# identify isotopcules # these could also come from a data frame or a tsv/csv/excel file raw_files <- raw_files |> orbi_identify_isotopocules(   isotopocules =      c(\"M0\" = 61.9878, \"15N\" = 62.9850, \"17O\" = 62.9922, \"18O\" = 63.9922) )  # plot again, now with the isotopocules identified raw_files |> orbi_plot_spectra()"},{"path":"https://isoorbi.isoverse.org/index.html","id":"process-data","dir":"","previous_headings":"Show me some code","what":"Process data","title":"Process Orbitrap Isotopocule Data","text":"","code":"# process raw files data dataset <- raw_files |>   # filter out unidentified peaks   orbi_filter_isotopocules() |>   # check for satellite peaks   orbi_flag_satellite_peaks() |>   # define base peak   orbi_define_basepeak(basepeak_def = \"M0\")  # plot the resulting isotopocule ratios dataset |> orbi_plot_raw_data(y = ratio)"},{"path":"https://isoorbi.isoverse.org/index.html","id":"summarize-results","dir":"","previous_headings":"Show me some code","what":"Summarize results","title":"Process Orbitrap Isotopocule Data","text":"additional code, please check Examples main menu isoorbi.isoverse.org, peruse full package structure .","code":"# calculate ratios across scans results <- dataset |> orbi_summarize_results(ratio_method = \"sum\")     # print results results |>  orbi_get_data(summary = c(\"isotopocule\", \"ratio\", \"ratio_sem\"))  # export results to excel results |> orbi_export_data_to_excel(   file = \"data_summary.xlsx\",   include = c(\"file_info\", \"summary\") ) # A tibble: 3 × 5    uidx filename             isotopocule   ratio ratio_sem   <int> <chr>                <fct>         <dbl>     <dbl> 1     1 nitrate_test_10scans 15N         0.00422 0.0000980 2     1 nitrate_test_10scans 17O         0.00132 0.0000554 3     1 nitrate_test_10scans 18O         0.00775 0.000162"},{"path":"https://isoorbi.isoverse.org/index.html","id":"package-structure","dir":"","previous_headings":"","what":"Package structure","title":"Process Orbitrap Isotopocule Data","text":"Click individual functions jump straight documenation.","code":"Warning in readLines(\"man/figures/figure_flowchart.svg\"): incomplete final line found on 'man/figures/figure_flowchart.svg'"},{"path":"https://isoorbi.isoverse.org/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"Process Orbitrap Isotopocule Data","text":"encounter bug, please file issue minimal reproducible example GitHub. questions discussion, please use isoorbi slack workspace.","code":""},{"path":"https://isoorbi.isoverse.org/reference/isoorbi-package.html","id":null,"dir":"Reference","previous_headings":"","what":"isoorbi: Process Orbitrap Isotopocule Data — isoorbi-package","title":"isoorbi: Process Orbitrap Isotopocule Data — isoorbi-package","text":"Read process isotopocule data Orbitrap Isotope Solutions mass spectrometer. Citation: Kantnerova et al. (Nature Protocols, 2024).","code":""},{"path":"https://isoorbi.isoverse.org/reference/isoorbi-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"isoorbi: Process Orbitrap Isotopocule Data — isoorbi-package","text":"Resources: Website isoorbi package: https://isoorbi.isoverse.org Package options: orbi_options","code":""},{"path":[]},{"path":"https://isoorbi.isoverse.org/reference/isoorbi-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"isoorbi: Process Orbitrap Isotopocule Data — isoorbi-package","text":"Maintainer: Caj Neubauer caj.neubauer@colorado.edu (ORCID) [copyright holder] Authors: Sebastian Kopf sebastian.kopf@colorado.edu (ORCID) Kristýna Kantnerová kristyna.kantnerova@colorado.edu (ORCID)","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_add_blocks_to_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot blocks background — orbi_add_blocks_to_plot","title":"Plot blocks background — orbi_add_blocks_to_plot","text":"function can used add colored background plot dual-inlet data different colors signify different data types (data, startup time, changeover time, unused). Note function works continuous pseudo-log y axis, log y axes.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_add_blocks_to_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot blocks background — orbi_add_blocks_to_plot","text":"","code":"orbi_add_blocks_to_plot(   plot,   x = c(\"guess\", \"scan.no\", \"time.min\"),   data_only = FALSE,   fill = .data$data_type,   fill_colors = c(\"#1B9E77\", \"#D95F02\", \"#7570B3\", \"#E7298A\", \"#66A61E\", \"#E6AB02\",     \"#A6761D\", \"#666666\"),   fill_scale = scale_fill_manual(\"blocks\", values = fill_colors),   alpha = 0.5,   show.legend = !data_only )"},{"path":"https://isoorbi.isoverse.org/reference/orbi_add_blocks_to_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot blocks background — orbi_add_blocks_to_plot","text":"plot object dataset defined blocks x x-axis use (time vs. scan number). set \"guess\" (default), function try figure plot. data_only set TRUE, blocks flagged \"data\" (orbi_get_option(\"data_type_data\")) highlighted fill use fill aesthetic, default block data_type fill_colors colors use, default color-blind friendly color palettes (RColorBrewer, dark2) fill_scale use parameter replace entire fill scale rather just fill_colors alpha opacity settings background show.legend whether include background information legend","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_adjust_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually adjust block delimiters — orbi_adjust_block","title":"Manually adjust block delimiters — orbi_adjust_block","text":"function can used manually adjust certain block starts ends defined orbi_define_block_for_flow_injection() orbi_define_blocks_for_dual_inlet() using either time scan number. Note adjusting blocks removes block segmentation. Make sure call orbi_segment_blocks() adjusting block delimiters.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_adjust_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually adjust block delimiters — orbi_adjust_block","text":"","code":"orbi_adjust_block(   dataset,   block,   filename = NULL,   shift_start_time.min = NULL,   shift_end_time.min = NULL,   shift_start_scan.no = NULL,   shift_end_scan.no = NULL,   set_start_time.min = NULL,   set_end_time.min = NULL,   set_start_scan.no = NULL,   set_end_scan.no = NULL )"},{"path":"https://isoorbi.isoverse.org/reference/orbi_adjust_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually adjust block delimiters — orbi_adjust_block","text":"dataset aggregated dataset data frame peaks (.e. works directly orbi_identify_isotopocules() well tibble orbi_get_data(peaks = everything()) reading IsoX file) block block adjust start /end filename needs specified dataset one filename shift_start_time.min provided, start time block shifted many minutes (use negative numbers shift back) shift_end_time.min provided, end time block shifted many minutes (use negative numbers shift back) shift_start_scan.provided, start block shifted many scans (use negative numbers shift back) shift_end_scan.provided, end block shifted many scans (use negative numbers shift back) set_start_time.min provided, sets start time block close possible time set_end_time.min provided, sets end time block close possible time set_start_scan.provided, sets start block scan number (scan must exist dataset) set_end_scan.provided, sets end block scan number (scan must exist dataset)","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_adjust_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually adjust block delimiters — orbi_adjust_block","text":"data frame (tibble) block limits altered according provided start/end change parameters. data longer part original block marked value orbi_get_option(\"data_type_unused\"). previously applied segmentation discarded (segment column set NA) avoid unintended side effects.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_aggregate_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate data from raw files — orbi_aggregate_raw","title":"Aggregate data from raw files — orbi_aggregate_raw","text":"function allows dynamic aggregation validation data read orbi_read_raw(). Like orbi_read_raw(), designed fail save safely catching errors reporting back (see orbi_get_problems()). function work box files without additional modification aggregator.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_aggregate_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate data from raw files — orbi_aggregate_raw","text":"","code":"orbi_aggregate_raw(   files_data,   aggregator = \"standard\",   show_progress = rlang::is_interactive(),   show_problems = TRUE )"},{"path":"https://isoorbi.isoverse.org/reference/orbi_aggregate_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate data from raw files — orbi_aggregate_raw","text":"files_data files read orbi_read_raw() aggregator typically name registered aggregator (see orbi_get_option(\"aggregators\")), default \"standard\" aggregator included package (orbi_get_aggregator(\"standard\")). options \"minimal\" (orbi_get_aggregator(\"minimal\")) \"extended\" (orbi_get_aggregator(\"extended\")). aggregator parameter can can also directly aggregator tibble (created/modified orbi_start_aggregator() /orbi_add_to_aggregator()) defines data aggregated . show_progress whether show progress bar, default always enabled running interactively e.g. inside RStudio (disabled notebook), turn show_progress = FALSE show_problems whether show problems encountered along way (rather just keeping track orbi_get_problems()). Set show_problems = FALSE turn live printout. Either way, encountered problems can retrieved running orbi_get_problems() returned list","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_aggregate_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate data from raw files — orbi_aggregate_raw","text":"list merged dataframes collected files_data based aggregator definitions","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_aggregator.html","id":null,"dir":"Reference","previous_headings":"","what":"Dynamic data agreggator — orbi_start_aggregator","title":"Dynamic data agreggator — orbi_start_aggregator","text":"functions allow definition custom data aggregators processing data extracted raw files. aggregator run imported file pulls together relevant data users interested making sure data formats correct aggregated data can merged across several imported files fast downstream processing.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_aggregator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dynamic data agreggator — orbi_start_aggregator","text":"","code":"orbi_start_aggregator(name)  orbi_add_to_aggregator(   aggregator,   dataset,   column,   source = column,   default = NA,   cast = \"as.character\",   regexp = FALSE,   func = NULL,   args = NULL )  orbi_register_aggregator(aggregator, name = attr(aggregator, \"name\"))  orbi_get_aggregator(name)"},{"path":"https://isoorbi.isoverse.org/reference/orbi_aggregator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dynamic data agreggator — orbi_start_aggregator","text":"name descriptive name aggregator. name automatically used default name registering aggregator via orbi_register_aggregator(). aggregator aggregator table generated orbi_start_aggregator() passed previous call orbi_add_to_aggregator() constructing entire aggregator piping dataset name dataset aggregate (file_info, scans, peaks, spectra) column name column data stored source single character column name vector column names (alternatives source) dataset find data column. vector multiple column names provided (e.g. source = c(\"a1\", \"a2\")), first column name found processing dataset used passed function defined func () one defined cast. provide multiple parameters data func, define list instead vector source = list(\"\", \"b\", \"c\") multiple alternative columns can source arguments, define source = list(c(\"a1\", \"a2\"), \"b\", c(\"c1\", \"c2\", \"c3\")) default default value source columns can found another error encountered aggregatio. Note default value also processed function cast make sure correct data type. cast cast values resulting column , commonly \".character\", \".integer\", \".numeric\", \".factor\". required ensure aggregated values correct data type. regexp whether source columm names interpreted regular expressions purpose finding relevant column(s). Note regexp = TRUE, search source column always becomes case-insensitive can also used direct match source column whose upper/lower casing can unreliable. column matched regexp also direct aggregator rule, direct aggregator rule takes precedence. func name processing function apply casting value cast function. optional can used conduct elaborate preprocessing data combining data multiple source columns correct way (e.g. pasting together multiple columns). args optional list arguments pass func addition values coming source colummn(s)","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_aggregator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dynamic data agreggator — orbi_start_aggregator","text":"orbi aggregator tibble","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_aggregator.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Dynamic data agreggator — orbi_start_aggregator","text":"orbi_start_aggregator(): starts aggregator orbi_add_to_aggregator(): add additional column aggregate data . Overwrites existing aggregator entry dataset column already exists. orbi_register_aggregator(): register aggregator isoorbi options can retrieved orbi_get_aggregator() orbi_get_aggregator(): retrieve registered aggregator (get aggregators orbi_get_option(\"aggregators\"))","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_analyze_shot_noise.html","id":null,"dir":"Reference","previous_headings":"","what":"Shot noise calculation — orbi_analyze_shot_noise","title":"Shot noise calculation — orbi_analyze_shot_noise","text":"function computes shot noise calculation.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_analyze_shot_noise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shot noise calculation — orbi_analyze_shot_noise","text":"","code":"orbi_analyze_shot_noise(dataset, include_flagged_data = FALSE)"},{"path":"https://isoorbi.isoverse.org/reference/orbi_analyze_shot_noise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shot noise calculation — orbi_analyze_shot_noise","text":"dataset aggregated dataset data frame peaks (.e. works directly orbi_identify_isotopocules() well tibble orbi_get_data(peaks = everything()) reading IsoX file) include_flagged_data whether include flagged data shot noise calculation (FALSE default)","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_analyze_shot_noise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shot noise calculation — orbi_analyze_shot_noise","text":"processed data frame new columns: n_effective_ions, ratio, ratio_rel_se.permil, shot_noise.permil","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_analyze_shot_noise.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shot noise calculation — orbi_analyze_shot_noise","text":"Analyze shot noise calculate combinations filename, compound, isotopocule provided dataset","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_calculate_ions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate ions from intensities — orbi_calculate_ions","title":"Calculate ions from intensities — orbi_calculate_ions","text":"functions calculates ions (ions.incremental) intensities based equation $$N_{ions} = S/N \\cdot{} C_N/z \\cdot{} \\sqrt{R_N/R} \\cdot \\sqrt{N_{MS}}$$ S reported signal (intensity) isotopocule, N noise associated signal (peakNoise), measured resolution setting R (resolution), noise factor \\(C_N\\) (CN) number charges corresponding Orbitrap noise band reference resolution \\(R_N\\) (RN), \\(N_{MS}\\) number microscans, z charge per ion (charge) isotopocule. See Makarov Denisov (2009) Eiler et al. (2017) details equation. default values CN RN Orbitrap Exploris Isotope Solutions Getting Started Guide (BRE0032999, Revision , October 2022). Note exact values factors critical number ions interpreted outside ratio calculations (ratio calculations, factors cancel).","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_calculate_ions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate ions from intensities — orbi_calculate_ions","text":"","code":"orbi_calculate_ions(dataset, CN = 3, RN = 240000)"},{"path":"https://isoorbi.isoverse.org/reference/orbi_calculate_ions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate ions from intensities — orbi_calculate_ions","text":"dataset aggregated dataset data frame peaks (.e. works directly orbi_identify_isotopocules() well tibble orbi_get_data(peaks = everything()) reading IsoX file) CN noise factor RN reference resolution noise factor","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_calculate_ions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate ions from intensities — orbi_calculate_ions","text":"object provided dataset new column ions.incremental","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_calculate_ions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate ions from intensities — orbi_calculate_ions","text":"using dataset read isox files might add charge column yet exist indicates charge isotopocule. using data raw files, orbi_identify_isotopocules() automatically call function default CN RN need call explicitly unless want change parameters.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_calculate_ratios.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate direct isotopocule ratios — orbi_calculate_ratios","title":"Calculate direct isotopocule ratios — orbi_calculate_ratios","text":"function calculates isotopocule/base peak ratios isotopocules. summarize average ratios way. summarizing version function, see orbi_summarize_results().","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_calculate_ratios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate direct isotopocule ratios — orbi_calculate_ratios","text":"","code":"orbi_calculate_ratios(dataset)"},{"path":"https://isoorbi.isoverse.org/reference/orbi_calculate_ratios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate direct isotopocule ratios — orbi_calculate_ratios","text":"dataset data frame output running orbi_define_basepeak()","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_calculate_ratios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate direct isotopocule ratios — orbi_calculate_ratios","text":"Returns mutated dataset ratio column added.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_calculate_summarized_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate isotopocule ratio — orbi_calculate_summarized_ratio","title":"Calculate isotopocule ratio — orbi_calculate_summarized_ratio","text":"function calculates ratio two isotopocules (numerator denominator). function averages multiple measurements using ratio_method returns single value. Normally function called directly user, via function orbi_summarize_results(), calculates isotopocule ratios results entire dataset.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_calculate_summarized_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate isotopocule ratio — orbi_calculate_summarized_ratio","text":"","code":"orbi_calculate_summarized_ratio(   numerator,   denominator,   ratio_method = c(\"direct\", \"mean\", \"sum\", \"median\", \"geometric_mean\", \"slope\",     \"weighted_sum\") )"},{"path":"https://isoorbi.isoverse.org/reference/orbi_calculate_summarized_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate isotopocule ratio — orbi_calculate_summarized_ratio","text":"numerator Column(s) used numerator; contains ion counts denominator Column used denominator; contains ion counts ratio_method Method computing ratio. Please note well: formula used calculate ion ratios matters! simply use arithmetic mean. best option may depend type data processing (e.g., MS1 versus M+1 fragmentation). ratio_method can one following: mean: arithmetic mean ratios individual scans. sum: sum ions numerator across scans divided sum ions observed denominator across scans. geometric_mean: geometric mean ratios individual scans. slope: ratio calculated using slope obtained linear regression model weighted numerator x, using stats::lm(x ~ y + 0, weights = x). weighted_sum: derivative sum option. weighing function ensures scan contributes equal weight ratio calculation, .e. scans ions Orbitrap contribute disproportionately total sum x y used calculate x/y.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_calculate_summarized_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate isotopocule ratio — orbi_calculate_summarized_ratio","text":"Single value ratio isotopocules defined numerator denominator calculated using ratio_method.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_calculate_summarized_ratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate isotopocule ratio — orbi_calculate_summarized_ratio","text":"","code":"df <-   system.file(\"extdata\", \"testfile_flow.isox\", package = \"isoorbi\") |>   orbi_read_isox() #> ✔ [145ms] orbi_read_isox() loaded 6449 peaks for 1 compound (HSO4-) with 5 #> isotopocules (M0, 33S, 17O, 34S, and 18O) from testfile_flow.isox  ions_18O <- dplyr::filter(df, isotopocule == \"18O\")$ions.incremental ions_M0 <- dplyr::filter(df, isotopocule == \"M0\")$ions.incremental  orbi_calculate_summarized_ratio(   numerator = ions_18O, denominator = ions_M0, ratio_method = \"sum\" ) #> [1] 0.01066211  orbi_calculate_summarized_ratio(   numerator = ions_18O, denominator = ions_M0, ratio_method = \"slope\" ) #> [1] 0.01071427"},{"path":"https://isoorbi.isoverse.org/reference/orbi_check_isoraw.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for the isoorbi raw file reader — orbi_check_isoraw","title":"Check for the isoorbi raw file reader — orbi_check_isoraw","text":"default, install isoraw reader missing outdated, ask user agree Thermo's license agreement Thermo RawFileReader proceeding. function runs automatically raw file read usually need called directly user.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_check_isoraw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for the isoorbi raw file reader — orbi_check_isoraw","text":"","code":"orbi_check_isoraw(   install_if_missing = !on_cran(),   reinstall_if_outdated = !on_cran(),   reinstall_always = FALSE,   min_version = \"0.2.2\",   source = paste0(\"https://github.com/isoverse/isoorbi/releases/download/isoraw-v\",     min_version),   accept_license = FALSE,   ... )"},{"path":"https://isoorbi.isoverse.org/reference/orbi_check_isoraw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for the isoorbi raw file reader — orbi_check_isoraw","text":"install_if_missing install reader missing reinstall_if_outdated install reader outdated (.e. least min_version) reinstall_always whether (re-)install matter min_version minimum version number required source URL (local path) find raw file reader, default latests release executables github accept_license explicitly accept Thermo's license agreement (FALSE license previously accepted, asked ) ... passed download.file (re-) installing reader","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_default_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Default isoorbi plotting theme — orbi_default_theme","title":"Default isoorbi plotting theme — orbi_default_theme","text":"Default isoorbi plotting theme","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_default_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default isoorbi plotting theme — orbi_default_theme","text":"","code":"orbi_default_theme(text_size = 16, facet_text_size = 20)"},{"path":"https://isoorbi.isoverse.org/reference/orbi_default_theme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default isoorbi plotting theme — orbi_default_theme","text":"text_size font size text facet_text_size font size facet text","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_default_theme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default isoorbi plotting theme — orbi_default_theme","text":"ggplot theme object","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_define_basepeak.html","id":null,"dir":"Reference","previous_headings":"","what":"Define the denominator for ratio calculation — orbi_define_basepeak","title":"Define the denominator for ratio calculation — orbi_define_basepeak","text":"orbi_define_basepeak() sets one isotopocule data frame base peak (ratio denominator) calculates instantaneous isotope ratios .","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_define_basepeak.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define the denominator for ratio calculation — orbi_define_basepeak","text":"","code":"orbi_define_basepeak(dataset, basepeak_def)"},{"path":"https://isoorbi.isoverse.org/reference/orbi_define_basepeak.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define the denominator for ratio calculation — orbi_define_basepeak","text":"dataset aggregated dataset data frame peaks (.e. works directly orbi_identify_isotopocules() well tibble orbi_get_data(peaks = everything()) reading IsoX file) basepeak_def isotopocule gets defined base peak, .e. denominator calculate ratios","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_define_basepeak.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define the denominator for ratio calculation — orbi_define_basepeak","text":"object provided dataset without rows basepeak isotopocule instead three new columns called basepeak, basepeak_ions, ratio holding basepeak information isotope ratios vs. base peak","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_define_basepeak.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define the denominator for ratio calculation — orbi_define_basepeak","text":"","code":"fpath <- system.file(\"extdata\", \"testfile_flow.isox\", package = \"isoorbi\") df <- orbi_read_isox(file = fpath) |>   orbi_simplify_isox() |>   orbi_define_basepeak(basepeak_def = \"M0\") #> ✔ [20ms] orbi_read_isox() loaded 6449 peaks for 1 compound (HSO4-) with 5 #> isotopocules (M0, 33S, 17O, 34S, and 18O) from testfile_flow.isox #> ✔ [23ms] orbi_simplify_isox() kept columns filepath, filename, scan.no, #> time.min, compound, isotopocule, ions.incremental, tic, and it.ms #> ✔ [147ms] orbi_define_basepeak() set M0 as the ratio denominator and calculated #> 5.16k ratio values for 4 isotopocules (33S, 17O, 34S, and 18O)"},{"path":"https://isoorbi.isoverse.org/reference/orbi_define_block_for_flow_injection.html","id":null,"dir":"Reference","previous_headings":"","what":"Define data block for flow injection — orbi_define_block_for_flow_injection","title":"Define data block for flow injection — orbi_define_block_for_flow_injection","text":"Define data block either start end time start end scan number. want make segments blocks (optional), note function - manually defining blocks - removes block segmentation. Make sure call orbi_segment_blocks() finishing block definitions.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_define_block_for_flow_injection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define data block for flow injection — orbi_define_block_for_flow_injection","text":"","code":"orbi_define_block_for_flow_injection(   dataset,   start_time.min = NULL,   end_time.min = NULL,   start_scan.no = NULL,   end_scan.no = NULL,   sample_name = NULL )"},{"path":"https://isoorbi.isoverse.org/reference/orbi_define_block_for_flow_injection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define data block for flow injection — orbi_define_block_for_flow_injection","text":"dataset aggregated dataset data frame peaks (.e. works directly orbi_identify_isotopocules() well tibble orbi_get_data(peaks = everything()) reading IsoX file) start_time.min set start time block end_time.min set end time block start_scan.set start scan block end_scan.set end scan block sample_name provided, used sample_name block","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_define_block_for_flow_injection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define data block for flow injection — orbi_define_block_for_flow_injection","text":"data frame (tibble) block definition added. data part block marked value orbi_get_option(\"data_type_unused\"). previously applied segmentation discarded (segment column set NA) avoid unintended side effects.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_define_blocks_for_dual_inlet.html","id":null,"dir":"Reference","previous_headings":"","what":"Binning raw data into blocks for dual inlet analyses — orbi_define_blocks_for_dual_inlet","title":"Binning raw data into blocks for dual inlet analyses — orbi_define_blocks_for_dual_inlet","text":"function sorts (bins) data indivual blocks reference, sample, changeover time, startup time.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_define_blocks_for_dual_inlet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Binning raw data into blocks for dual inlet analyses — orbi_define_blocks_for_dual_inlet","text":"","code":"orbi_define_blocks_for_dual_inlet(   dataset,   ref_block_time.min,   change_over_time.min,   sample_block_time.min = ref_block_time.min,   startup_time.min = 0,   ref_block_name = orbi_get_option(\"di_ref_name\"),   sample_block_name = orbi_get_option(\"di_sample_name\") )"},{"path":"https://isoorbi.isoverse.org/reference/orbi_define_blocks_for_dual_inlet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Binning raw data into blocks for dual inlet analyses — orbi_define_blocks_for_dual_inlet","text":"dataset aggregated dataset data frame peaks (.e. works directly orbi_identify_isotopocules() well tibble orbi_get_data(peaks = everything()) reading IsoX file) ref_block_time.min time signal stable reference analyzed change_over_time.min time signal unstable switching reference sample back sample_block_time.min time signal stable sample analyzed startup_time.min initial time stabilize spray ref_block_name name reference measured sample_block_name name sample measured","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_define_blocks_for_dual_inlet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Binning raw data into blocks for dual inlet analyses — orbi_define_blocks_for_dual_inlet","text":"data frame (tibble) block annotations form additional columns described : data_group integer numbers data group (whether startup, sample block, segment, etc.) file sequentially uniquely identify groups data belong together - columns static (.e. functions like orbi_adjust_block() orbi_segment_blocks() lead renumbering) used purely grouping purposes calculations visualization block integer counting data blocks file (0 startup block) sample_name name material measured defined ref_block_name sample_block_name parameters segment integer defines segments within individual blocks - NA optional orbi_segment_blocks() called data_type text value describing type data data_group - list main categories, call orbi_get_options(\"data_type\")","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_export_data_to_excel.html","id":null,"dir":"Reference","previous_headings":"","what":"Export data to excel — orbi_export_data_to_excel","title":"Export data to excel — orbi_export_data_to_excel","text":"functions exports dataset Excel file. dataset aggregated data, use include parameter decide part data export.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_export_data_to_excel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export data to excel — orbi_export_data_to_excel","text":"","code":"orbi_export_data_to_excel(   dataset,   file,   dbl_digits = 7,   int_format = \"0\",   dbl_format = sprintf(sprintf(\"%%.%sf\", dbl_digits), 0),   include = c(\"file_info\", \"summary\", \"scans\", \"peaks\", \"problems\"),   show_progress = rlang::is_interactive() )"},{"path":"https://isoorbi.isoverse.org/reference/orbi_export_data_to_excel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export data to excel — orbi_export_data_to_excel","text":"dataset aggregated dataset data frame peaks (.e. works directly orbi_identify_isotopocules() well tibble orbi_get_data(peaks = everything()) reading IsoX file) file file path export file - recursively creates directory non-existent dbl_digits many digits show dbls (exported) int_format excel formatting style integers dbl_format excel formatting style doubles (created automatically dbl_digits parameter) include tibbles include dataset aggregated data. default includes spectra show_progress whether show progress bar, default always enabled running interactively e.g. inside RStudio (disabled notebook), turn show_progress = FALSE","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_export_data_to_excel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export data to excel — orbi_export_data_to_excel","text":"returns dataset invisibly use pipes","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Basic generic data files filter — orbi_filter_files","title":"Basic generic data files filter — orbi_filter_files","text":"basic filter function file names, compounds time ranges. filtering isotopocules, function calls orbi_filter_isotopocules() internally (isoorbi version 1.5.0 orbi_filter_isotopocules() can also used directly instead via function). Default value parameters NULL, .e. filter applied.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Basic generic data files filter — orbi_filter_files","text":"","code":"orbi_filter_files(   dataset,   filenames = NULL,   compounds = NULL,   isotopocules = NULL,   time_min = NULL,   time_max = NULL )"},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Basic generic data files filter — orbi_filter_files","text":"dataset aggregated dataset data frame peaks (.e. works directly orbi_identify_isotopocules() well tibble orbi_get_data(peaks = everything()) reading IsoX file) filenames Vector file names keep, keeps set NULL (default) compounds Vector compounds keep, keeps set NULL (default) isotopocules Vector isotopocules keep, keeps set NULL (default) time_min Minimum retention time minutes (time.min), minimum set NULL (default) time_max Maximum retention time minutes (time.min), maximum set NULL (default)","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Basic generic data files filter — orbi_filter_files","text":"Filtered tibble","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Basic generic data files filter — orbi_filter_files","text":"","code":"fpath <- system.file(\"extdata\", \"testfile_flow.isox\", package = \"isoorbi\") df <-   orbi_read_isox(file = fpath) |>   orbi_simplify_isox() |>   orbi_filter_files(     filenames = c(\"s3744\"),     compounds = \"HSO4-\",     isotopocules = c(\"M0\", \"34S\", \"18O\")   ) #> ✔ [20ms] orbi_read_isox() loaded 6449 peaks for 1 compound (HSO4-) with 5 #> isotopocules (M0, 33S, 17O, 34S, and 18O) from testfile_flow.isox #> ✔ [5ms] orbi_simplify_isox() kept columns filepath, filename, scan.no, #> time.min, compound, isotopocule, ions.incremental, tic, and it.ms #> ✔ [6ms] orbi_filter_isotopocules() removed 860 / 2.15k peaks (40%) because they #> were not the selected isotopocule M0, 34S, and 18O (860). #> ✔ [77ms] orbi_filter_files() filtered the dataset by filenames (s3744), #> compounds (HSO4-), and isotopocules (M0, 34S, 18O) and removed a total of #> 5.16k/6.45k peaks (80%)"},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_flagged_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter out flagged data — orbi_filter_flagged_data","title":"Filter out flagged data — orbi_filter_flagged_data","text":"function filters data previously flagged using functions orbi_flag_satellite_peaks(), orbi_flag_weak_isotopocules(), /orbi_flag_outliers(). Note function longer necessary call explicitly orbi_analyze_shot_noise() orbi_summarize_results() automatically exclude flagged data.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_flagged_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter out flagged data — orbi_filter_flagged_data","text":"","code":"orbi_filter_flagged_data(dataset)"},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_flagged_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter out flagged data — orbi_filter_flagged_data","text":"dataset tibble previously flagged data orbi_flag_satellite_peaks(), orbi_flag_weak_isotopocules(), /orbi_flag_outliers()","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_flagged_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter out flagged data — orbi_filter_flagged_data","text":"dataset flagged data filtered ","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_isotopocules.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter isotopocules — orbi_filter_isotopocules","title":"Filter isotopocules — orbi_filter_isotopocules","text":"function helps filter missing isotopcules, unidentified peaks, select specific isotopocule. can called time orbi_identify_isotopocules() reading isox file. default (.e. run without setting parameters), removes unidentified peaks missing isotopcules keeps others.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_isotopocules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter isotopocules — orbi_filter_isotopocules","text":"","code":"orbi_filter_isotopocules(   dataset,   isotopocules = c(),   keep_missing = FALSE,   keep_unidentified = FALSE )"},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_isotopocules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter isotopocules — orbi_filter_isotopocules","text":"dataset aggregated dataset data frame peaks (.e. works directly orbi_identify_isotopocules() well tibble orbi_get_data(peaks = everything()) reading IsoX file) isotopocules provided, isotopocules kept keep_missing whether keep missing isotopocules peaks list (.e. ), default keep keep_unidentified whether keep unidentified isotopocules peaks list (.e. peaks identified specificic isotopocule), default keep ","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_isotopocules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter isotopocules — orbi_filter_isotopocules","text":"dataset filtered isotopocules","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_isox.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter isox files — orbi_filter_isox","title":"Filter isox files — orbi_filter_isox","text":"orbi_filter_isox() renamed orbi_filter_files() incorporate wider scope filtering isox raw files data.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_isox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter isox files — orbi_filter_isox","text":"","code":"orbi_filter_isox(...)"},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_isox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter isox files — orbi_filter_isox","text":"... arguments passed orbi_filter_files()","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_satellite_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Function replaced by orbi_flag_satellite_peaks() — orbi_filter_satellite_peaks","title":"Function replaced by orbi_flag_satellite_peaks() — orbi_filter_satellite_peaks","text":"Function replaced orbi_flag_satellite_peaks()","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_satellite_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function replaced by orbi_flag_satellite_peaks() — orbi_filter_satellite_peaks","text":"","code":"orbi_filter_satellite_peaks(...)"},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_satellite_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function replaced by orbi_flag_satellite_peaks() — orbi_filter_satellite_peaks","text":"... parameters passed new function orbi_flag_satellite_peaks().","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_scan_intensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Function replaced by orbi_flag_outliers() — orbi_filter_scan_intensity","title":"Function replaced by orbi_flag_outliers() — orbi_filter_scan_intensity","text":"Function replaced orbi_flag_outliers()","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_scan_intensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function replaced by orbi_flag_outliers() — orbi_filter_scan_intensity","text":"","code":"orbi_filter_scan_intensity(..., outlier_percent)"},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_scan_intensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function replaced by orbi_flag_outliers() — orbi_filter_scan_intensity","text":"... parameters passed new function orbi_flag_outliers(). outlier_percent outlier_percent needs 0 10, flags extreme scans based TIC x injection time (.e., ion intensity)","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_weak_isotopocules.html","id":null,"dir":"Reference","previous_headings":"","what":"Function replaced by orbi_flag_weak_isotopocules() — orbi_filter_weak_isotopocules","title":"Function replaced by orbi_flag_weak_isotopocules() — orbi_filter_weak_isotopocules","text":"Function replaced orbi_flag_weak_isotopocules()","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_weak_isotopocules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function replaced by orbi_flag_weak_isotopocules() — orbi_filter_weak_isotopocules","text":"","code":"orbi_filter_weak_isotopocules(...)"},{"path":"https://isoorbi.isoverse.org/reference/orbi_filter_weak_isotopocules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function replaced by orbi_flag_weak_isotopocules() — orbi_filter_weak_isotopocules","text":"... parameters passed new function orbi_flag_weak_isotopocules().","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_find_isox.html","id":null,"dir":"Reference","previous_headings":"","what":"Find isox files — orbi_find_isox","title":"Find isox files — orbi_find_isox","text":"Finds .isox files folder.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_find_isox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find isox files — orbi_find_isox","text":"","code":"orbi_find_isox(folder, recursive = TRUE)"},{"path":"https://isoorbi.isoverse.org/reference/orbi_find_isox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find isox files — orbi_find_isox","text":"folder path folder isox files recursive whether find files recursively","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_find_isox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find isox files — orbi_find_isox","text":"","code":"# all .isox files provided with the isoorbi package orbi_find_isox(system.file(\"extdata\", package = \"isoorbi\")) #> [1] \"/home/runner/work/_temp/Library/isoorbi/extdata/testfile_dual_inlet.isox\" #> [2] \"/home/runner/work/_temp/Library/isoorbi/extdata/testfile_flow.isox\"       #> [3] \"/home/runner/work/_temp/Library/isoorbi/extdata/testfile_shotnoise.isox\""},{"path":"https://isoorbi.isoverse.org/reference/orbi_find_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Find raw files — orbi_find_raw","title":"Find raw files — orbi_find_raw","text":"Finds .raw files folder.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_find_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find raw files — orbi_find_raw","text":"","code":"orbi_find_raw(folder, pattern = NULL, include_cache = TRUE, recursive = TRUE)"},{"path":"https://isoorbi.isoverse.org/reference/orbi_find_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find raw files — orbi_find_raw","text":"folder path folder raw files pattern provide name pattern find specific raw files include_cache whether include .raw.cache.zip folders absence corresponding .raw file copies cache read even absence original raw files recursive whether find files recursively","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_find_raw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find raw files — orbi_find_raw","text":"","code":"# all .raw files provided with the isoorbi package orbi_find_raw(system.file(\"extdata\", package = \"isoorbi\")) #> [1] \"/home/runner/work/_temp/Library/isoorbi/extdata/nitrate_test_10scans.raw\" #> [2] \"/home/runner/work/_temp/Library/isoorbi/extdata/nitrate_test_1scan.raw\""},{"path":"https://isoorbi.isoverse.org/reference/orbi_flag_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Flag outlier scans — orbi_flag_outliers","title":"Flag outlier scans — orbi_flag_outliers","text":"function flags outliers using one different methods provided parameters (use multiple, please call function several times sequentially). Note function evaluates outliers within \"uidx\", \"filename\", \"injection\" (columns exist), additionally within \"block\" \"segment\" by_block = TRUE. addition groupings already defined calling function using dplyr's group_by(). restores original groupings returned datasert.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_flag_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flag outlier scans — orbi_flag_outliers","text":"","code":"orbi_flag_outliers(   dataset,   agc_fold_cutoff = NA_real_,   agc_window = c(),   agc_absolute_cutoff = c(),   by_block = TRUE )"},{"path":"https://isoorbi.isoverse.org/reference/orbi_flag_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flag outlier scans — orbi_flag_outliers","text":"dataset aggregated dataset data frame peaks (.e. works directly orbi_identify_isotopocules() well tibble orbi_get_data(peaks = everything()) reading IsoX file) agc_fold_cutoff flags scans fold cutoff based average number ions Orbitrap analyzer. example, agc_fold_cutoff = 2 flags scans 2 times, less 1/2 times average. TIC multiplied injection time serves estimate number ions Orbitrap. agc_window flags scans critically low high number ions Orbitrap analyzer. Provide vector 2 numbers c(x,y) flagging lowest x percent highest y percent. TIC multiplied injection time serves estimate number ions Orbitrap. agc_absolute_cutoff flags scans number ions Orbitrap analyzer outside absolute range. Provide vector 2 numbers c(x,y) flagging data x y TIC multiplied injection time (serves estimate number ions Orbitrap). by_block dataset block segment definitions, outlier flag evaluated within block+segment globally? default within block+segment, switch globally turning by_block = FALSE","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_flag_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flag outlier scans — orbi_flag_outliers","text":"object provided dataset new columns is_outlier outlier_type (already exist) flags outliers identified method provides type outlier (e.g. \"2 fold agc cutoff\"), respectively.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_flag_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flag outlier scans — orbi_flag_outliers","text":"","code":"fpath <- system.file(\"extdata\", \"testfile_flow.isox\", package = \"isoorbi\") df <-   orbi_read_isox(file = fpath) |>   orbi_simplify_isox() |>   orbi_flag_outliers(agc_window = c(1,99)) #> ✔ [20ms] orbi_read_isox() loaded 6449 peaks for 1 compound (HSO4-) with 5 #> isotopocules (M0, 33S, 17O, 34S, and 18O) from testfile_flow.isox #> ✔ [5ms] orbi_simplify_isox() kept columns filepath, filename, scan.no, #> time.min, compound, isotopocule, ions.incremental, tic, and it.ms #> ✔ [26ms] orbi_flag_outliers() flagged 30/1290 scans (2.3%) as outliers based on #> AGC window (1% to 99%) cutoff, i.e. based on scans whose number of ions tic * #> it.ms in the Orbitrap analyzer fall into the lowest (<1%) or highest (>99%) #> quantiles, in 3 data groups (based on filename) → use orbi_plot_raw_data(y = #> tic * it.ms) to visualize them"},{"path":"https://isoorbi.isoverse.org/reference/orbi_flag_satellite_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Flag minor satellite peaks Flags minor signals for an isotopocule that matches multiple peaks within its exact mass +/- tolerance interval in the same scan. These are often small satellite peaks generated by the Fourier transform. However, if there are satelite peaks of high intensity or very many satellite peaks, it can indicate that the m/z and tolerance setting used for identifying isotopcules need to be revisited. Visualize the flagged satellite peaks with orbi_plot_satellite_peaks(). — orbi_flag_satellite_peaks","title":"Flag minor satellite peaks Flags minor signals for an isotopocule that matches multiple peaks within its exact mass +/- tolerance interval in the same scan. These are often small satellite peaks generated by the Fourier transform. However, if there are satelite peaks of high intensity or very many satellite peaks, it can indicate that the m/z and tolerance setting used for identifying isotopcules need to be revisited. Visualize the flagged satellite peaks with orbi_plot_satellite_peaks(). — orbi_flag_satellite_peaks","text":"Flag minor satellite peaks Flags minor signals isotopocule matches multiple peaks within exact mass +/- tolerance interval scan. often small satellite peaks generated Fourier transform. However, satelite peaks high intensity many satellite peaks, can indicate m/z tolerance setting used identifying isotopcules need revisited. Visualize flagged satellite peaks orbi_plot_satellite_peaks().","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_flag_satellite_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flag minor satellite peaks Flags minor signals for an isotopocule that matches multiple peaks within its exact mass +/- tolerance interval in the same scan. These are often small satellite peaks generated by the Fourier transform. However, if there are satelite peaks of high intensity or very many satellite peaks, it can indicate that the m/z and tolerance setting used for identifying isotopcules need to be revisited. Visualize the flagged satellite peaks with orbi_plot_satellite_peaks(). — orbi_flag_satellite_peaks","text":"","code":"orbi_flag_satellite_peaks(dataset)"},{"path":"https://isoorbi.isoverse.org/reference/orbi_flag_satellite_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flag minor satellite peaks Flags minor signals for an isotopocule that matches multiple peaks within its exact mass +/- tolerance interval in the same scan. These are often small satellite peaks generated by the Fourier transform. However, if there are satelite peaks of high intensity or very many satellite peaks, it can indicate that the m/z and tolerance setting used for identifying isotopcules need to be revisited. Visualize the flagged satellite peaks with orbi_plot_satellite_peaks(). — orbi_flag_satellite_peaks","text":"dataset aggregated dataset data frame peaks (.e. works directly orbi_identify_isotopocules() well tibble orbi_get_data(peaks = everything()) reading IsoX file)","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_flag_satellite_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flag minor satellite peaks Flags minor signals for an isotopocule that matches multiple peaks within its exact mass +/- tolerance interval in the same scan. These are often small satellite peaks generated by the Fourier transform. However, if there are satelite peaks of high intensity or very many satellite peaks, it can indicate that the m/z and tolerance setting used for identifying isotopcules need to be revisited. Visualize the flagged satellite peaks with orbi_plot_satellite_peaks(). — orbi_flag_satellite_peaks","text":"object provided dataset new column is_satellite_peak flags satellite peaks","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_flag_satellite_peaks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flag minor satellite peaks Flags minor signals for an isotopocule that matches multiple peaks within its exact mass +/- tolerance interval in the same scan. These are often small satellite peaks generated by the Fourier transform. However, if there are satelite peaks of high intensity or very many satellite peaks, it can indicate that the m/z and tolerance setting used for identifying isotopcules need to be revisited. Visualize the flagged satellite peaks with orbi_plot_satellite_peaks(). — orbi_flag_satellite_peaks","text":"","code":"fpath <- system.file(\"extdata\", \"testfile_flow.isox\", package = \"isoorbi\") df <-   orbi_read_isox(file = fpath) |>   orbi_simplify_isox() |>   orbi_flag_satellite_peaks() #> ✔ [20ms] orbi_read_isox() loaded 6449 peaks for 1 compound (HSO4-) with 5 #> isotopocules (M0, 33S, 17O, 34S, and 18O) from testfile_flow.isox #> ✔ [5ms] orbi_simplify_isox() kept columns filepath, filename, scan.no, #> time.min, compound, isotopocule, ions.incremental, tic, and it.ms #> ✔ [122ms] orbi_flag_satellite_peaks() confirmed there are no satellite peaks"},{"path":"https://isoorbi.isoverse.org/reference/orbi_flag_weak_isotopocules.html","id":null,"dir":"Reference","previous_headings":"","what":"Flag weak isotopocules — orbi_flag_weak_isotopocules","title":"Flag weak isotopocules — orbi_flag_weak_isotopocules","text":"function flags isotopocules detected minimum min_percent scans can easily visualized orbi_plot_isotopocule_coverage(). evaluates weak isotopocules within \"uidx\", \"filename\", \"block\", \"segment\" \"injection\" (columns exist), addition groupings already defined calling function using dplyr's group_by(). restores original groupings returned data.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_flag_weak_isotopocules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flag weak isotopocules — orbi_flag_weak_isotopocules","text":"","code":"orbi_flag_weak_isotopocules(dataset, min_percent = 100)"},{"path":"https://isoorbi.isoverse.org/reference/orbi_flag_weak_isotopocules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flag weak isotopocules — orbi_flag_weak_isotopocules","text":"dataset simplified IsoX data frame processed min_percent number 0 100 (inclusive). Isotopocule must observed least percentage scans (please note: percentage defined relative commonly observed isotopocule compound). default 100, stringent condition ensure reliable isotpocule coverage ratio calculations across data blocks. lower default, mindful potential misinterprations using isotopotcules close detection limit within datablock. continuous flow operations may necessary make data blocks smaller using orbi_define_block_for_flow_injection() orbi_adjust_block().","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_flag_weak_isotopocules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flag weak isotopocules — orbi_flag_weak_isotopocules","text":"object provided dataset new column is_weak_isotopocule flags weak isotopocules.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_flag_weak_isotopocules.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flag weak isotopocules — orbi_flag_weak_isotopocules","text":"","code":"fpath <- system.file(\"extdata\", \"testfile_flow.isox\", package = \"isoorbi\") df <- orbi_read_isox(file = fpath) |>       orbi_simplify_isox() |>       orbi_flag_weak_isotopocules(min_percent = 100) #> ✔ [20ms] orbi_read_isox() loaded 6449 peaks for 1 compound (HSO4-) with 5 #> isotopocules (M0, 33S, 17O, 34S, and 18O) from testfile_flow.isox #> ✔ [5ms] orbi_simplify_isox() kept columns filepath, filename, scan.no, #> time.min, compound, isotopocule, ions.incremental, tic, and it.ms #> ✔ [32ms] orbi_flag_weak_isotopocules() flagged 1 of 15 isotopocules as weak #> because they were NOT present in at least 100% of scans in each of the 15 data #> groups (based on filename, compound, and isotopocule) → use #> orbi_plot_isotopocule_coverage() to visualize them"},{"path":"https://isoorbi.isoverse.org/reference/orbi_get_blocks_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize blocks info — orbi_get_blocks_info","title":"Summarize blocks info — orbi_get_blocks_info","text":"function provides overview table blocks_info shows information blocks dataset (block number, sample name, data type, scan number start time block starts, scan number end time block ends).","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_get_blocks_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize blocks info — orbi_get_blocks_info","text":"","code":"orbi_get_blocks_info(   dataset,   .by = c(\"uidx\", \"filename\", \"injection\", \"data_group\", \"block\", \"sample_name\",     \"data_type\", \"segment\") )"},{"path":"https://isoorbi.isoverse.org/reference/orbi_get_blocks_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize blocks info — orbi_get_blocks_info","text":"dataset aggregated dataset data frame peaks (.e. works directly orbi_identify_isotopocules() well tibble orbi_get_data(peaks = everything()) reading IsoX file) .grouping columns block info (akin dplyr's .parameter e.g. dplyr::summarize()). set user, columns parameter's default values used, present dataset.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_get_blocks_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize blocks info — orbi_get_blocks_info","text":"block summary blocks defined yet, empty tibble (warning)","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_get_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get data frame from aggregated data — orbi_get_data","title":"Get data frame from aggregated data — orbi_get_data","text":"Retrieve specific subset aggregated data single data frame specifying columns take dataset (file_info, scans, peaks, etc.) using dplyr::select() syntax. data one dataset selected (e.g. columns scans peaks), datasets combined dplyr::inner_join() using columns listed (ones actually datasets). Joins lead duplicated data entries (.e. many--many joins) allowed throw error avoid unexpected replications individual datapoints. really want join, manually.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_get_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get data frame from aggregated data — orbi_get_data","text":"","code":"orbi_get_data(   aggregated_data,   file_info = c(\"filename\"),   scans = NULL,   peaks = NULL,   spectra = NULL,   problems = NULL,   summary = NULL,   by = c(\"uidx\", \"scan.no\") )"},{"path":"https://isoorbi.isoverse.org/reference/orbi_get_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get data frame from aggregated data — orbi_get_data","text":"aggregated_data datasets aggregated orbi_aggregate_raw() file_info columns get aggregated file_info, dplyr::select() syntax supported scans columns get aggregated scans, dplyr::select() syntax supported peaks columns get aggregated peaks, dplyr::select() syntax supported spectra columns get aggregated spectra, dplyr::select() syntax supported problems columns get aggregated problems, dplyr::select() syntax supported summary columns get summary calculated via orbi_summarize_results(), dplyr::select() syntax supported. Warning: advisable combine columns summary anything file_info lead duplicated datasets given summary integrates across multiple scans. columns look joining datasets together. Make sure include relevant columns selections individual datasets joined correctly. default usually sufficient","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_get_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get data frame from aggregated data — orbi_get_data","text":"tibble","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_get_example_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Get available example file(s) — orbi_get_example_files","title":"Get available example file(s) — orbi_get_example_files","text":"function provide path(s) example file(s). requested file yet available locally available https://github.com/isoverse/isodata, download local storage. default, download cache files (.raw.cache.zip) instead original .raw files cache files significantely smaller. Todownload original raw files instead, use download_raw_files = TRUE.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_get_example_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get available example file(s) — orbi_get_example_files","text":"","code":"orbi_get_example_files(   filenames,   download_raw_files = FALSE,   download_always = FALSE )"},{"path":"https://isoorbi.isoverse.org/reference/orbi_get_example_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get available example file(s) — orbi_get_example_files","text":"filenames names example files download_raw_files original raw files downloaded? default cache files (raw.cache.zip) downloaded usually much smaller. However, work retrieving additional spectra. download original spectra, switch download_raw_files = TRUE download_always whether download files anew even already exist locally","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_get_example_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get available example file(s) — orbi_get_example_files","text":"file path(s) can passed directly orbi_read_raw()","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_get_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all isoorbi package settings — orbi_get_settings","title":"Get all isoorbi package settings — orbi_get_settings","text":"orbi_get_settings() renamed orbi_get_options() part isoorbi switching 'settings' 'options' consistent base R naming conventions","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_get_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all isoorbi package settings — orbi_get_settings","text":"","code":"orbi_get_settings(pattern = NULL)"},{"path":"https://isoorbi.isoverse.org/reference/orbi_get_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all isoorbi package settings — orbi_get_settings","text":"pattern passed orbi_get_options()","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_identify_isotopocules.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify isotopocules — orbi_identify_isotopocules","title":"Identify isotopocules — orbi_identify_isotopocules","text":"Map mass spectral peaks specific isotopocules based mass.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_identify_isotopocules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify isotopocules — orbi_identify_isotopocules","text":"","code":"orbi_identify_isotopocules(   aggregated_data,   isotopocules,   default_tolerance = 1,   default_charge = 1 )"},{"path":"https://isoorbi.isoverse.org/reference/orbi_identify_isotopocules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify isotopocules — orbi_identify_isotopocules","text":"aggregated_data either data aggregated orbi_aggregate_raw() straight-tibble data frame peaks (e.g. retrieved via orbi_get_data(peaks = everything())). isotopocules list isotopocules map, can data frame/tibble, named vector c(\"M0\" = 61.9878, \"15N\" = 62.9850), name file read (.csv/.tsv/.xlsx supported). provided tibble/file, required columns isotopocule/isotopolog mz/mass (alternative names columns, including uppercase versions, recognized automatically). addition, tolerance/tolerance [mmu]/tolerance [mDa], charge/z, #compound/compound, fragment recognized, well (arbitrarily named) columns additional information. Character columns isotopocules table (including isotopocule compound) turned factors levels preserve order isotopocules. means change order isotopocules downstream plotting functions, make sure list order like presented . Note tolerance/tolerance [mmu]/tolerance [mDa] charge/z provided, values parameters default_tolerance default_charge used, respectively. default_tolerance tolerance (mmu) used isotopocule identification tolerance/tolerance [mmu]/tolerance [mDa] column included isotopocules default_charge charge used unidentified peak, charge/z column included isotopocules","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_identify_isotopocules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify isotopocules — orbi_identify_isotopocules","text":"object provided aggregated_data added columns compound (provided), itc_uidx (introduced unique isotopocule index), isotopocule, mzExact, charge, ions.incremental (via orbi_calculate_ions()), well additional information columns provided isotopocules. Note default CN RN values orbi_calculate_ions() ones used, simply run orbi_calculate_ions() explicitly afterwards. Also note information columns aggregated previous steps purposefully preserved step.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_isotopocule_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Isotopocule coverage — orbi_plot_isotopocule_coverage","title":"Isotopocule coverage — orbi_plot_isotopocule_coverage","text":"coverage isotopcule across scans/time important indicator data completeness. functions provide ways summarize visualize isotopocule coverage dataset.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_isotopocule_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Isotopocule coverage — orbi_plot_isotopocule_coverage","text":"","code":"orbi_plot_isotopocule_coverage(   dataset,   isotopocules = c(),   x = c(\"scan.no\", \"time.min\"),   x_breaks = scales::breaks_pretty(5),   add_data_blocks = TRUE )  orbi_get_isotopocule_coverage(dataset)"},{"path":"https://isoorbi.isoverse.org/reference/orbi_isotopocule_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Isotopocule coverage — orbi_plot_isotopocule_coverage","text":"dataset data frame aggregated dataset satellite peaks already identified (.e. orbi_flag_satellite_peaks()) isotopocules isotopocules visualize, none provided visualize (may take long time even crash R session many isotopocules data set) x x-axis column plot, either \"time.min\" \"scan.\", default \"scan.\" x_breaks breaks use x axis, change make specifid tickmarks add_data_blocks add highlight data blocks block definitions dataset (uses orbi_add_blocks_to_plot()). add blocks manually, set add_data_blocks = FALSE manually call orbi_add_blocks_to_plot() function afterwards.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_isotopocule_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Isotopocule coverage — orbi_plot_isotopocule_coverage","text":"ggplot object summary data frame","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_isotopocule_coverage.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Isotopocule coverage — orbi_plot_isotopocule_coverage","text":"orbi_plot_isotopocule_coverage(): visualizes isotope coverage. Weak isotopocules (previously defined orbi_flag_weak_isotopocules()) highlighted red. orbi_get_isotopocule_coverage(): calculates stretches data data isotopocules. function usually used indicrectly orbi_plot_isotopocule_coverage() can called directly investigate isotopocule coverage.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Package options — orbi_options","title":"Package options — orbi_options","text":"options best set via orbi_options() queried via orbi_get_option(). However, base functions options() getOption() work well require isoorbi. prefix (package name dot) option name. Setting option value NULL means default used. orbi_get_options() available additional convenience function retrieve subset options regular expression pattern.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Package options — orbi_options","text":"","code":"orbi_options(...)  orbi_get_options(pattern = NULL)  orbi_get_option(x)"},{"path":"https://isoorbi.isoverse.org/reference/orbi_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Package options — orbi_options","text":"... set package options, syntax identical options() pattern retrieve multiple options (list) shared pattern x name specific option retrieve","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_options.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Package options — orbi_options","text":"orbi_options(): set/get option values orbi_get_options(): get subset option values fit pattern orbi_get_option(): retrieve current value one option (option must defined package)","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_options.html","id":"options-for-the-isoorbi-package","dir":"Reference","previous_headings":"","what":"Options for the isoorbi package","title":"Package options — orbi_options","text":"di_ref_name: text label dual inlet reference blocks di_sample_name: text label dual inlet sample blocks data_type_data: text used flag raw data actually data data_type_startup: text used flag raw data part startup data_type_changeover: text used flag raw data part changeover data_type_unused: text used flag raw data unused aggregators: data aggregators pulling data raw files. list available aggregators accessible via orbi_get_option(\"aggregators\"). Individiual aggregators available via shortcut helper function orbi_get_aggregator(\"standard\"). Register new/overwrite existing aggregators via orbi_register_aggregator(). debug: turn debug mode auto_use_ansi: whether automatically enable correct rendering stylized (ansi) output HTML reports notebooks call library(isoorbi). Can turned calling isoorbi::orbi_options(auto_use_ansi = FALSE) call library(isoorbi).","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Package options — orbi_options","text":"","code":"# All default options orbi_get_options() #> $di_ref_name #> [1] \"ref\" #>  #> $di_sample_name #> [1] \"sam\" #>  #> $data_type_data #> [1] \"data\" #>  #> $data_type_startup #> [1] \"startup\" #>  #> $data_type_changeover #> [1] \"changeover\" #>  #> $data_type_unused #> [1] \"unused\" #>  #> $aggregators #> $aggregators$minimal #> ────────────────────────────── Aggregator minimal ────────────────────────────── #> Dataset file_info: #>  → filename = as.character(sub(FileName, pattern = \".raw\", replacement = \"\", #> fixed = TRUE)) #>  → creation_date = as.POSIXct(CreationDate) #>  → in_aquisition = as.logical(InAquisition) #> Dataset scans: #>  → scan.no = as.integer(scan.no) #>  → time.min = as.numeric(StartTime) #>  → tic = as.numeric(TIC) #>  → it.ms = as.numeric(`Ion Injection Time (ms)`) #>  → resolution = as.numeric(one_of(`FT Resolution`, `Orbitrap Resolution`)) #>  → microscans = as.integer(`Micro Scan Count`) #> Dataset peaks: #>  → scan.no = as.integer(scan.no) #>  → mzMeasured = as.numeric(mass) #>  → intensity = as.numeric(intensity) #>  → baseline = as.numeric(baseline) #>  → peakNoise = as.numeric(noise) #>  → peakResolution = as.numeric(resolution) #>  → isRefPeak = as.logical(is_ref) #>  → isLockPeak = as.logical(is_lock_peak) #> Dataset spectra: #>  → scan.no = as.integer(scan.no) #>  → mz = as.numeric(mass) #>  → intensity = as.numeric(intensity) #>  #> $aggregators$standard #> ────────────────────────────── Aggregator standard ───────────────────────────── #> Dataset file_info: #>  → filename = as.character(sub(FileName, pattern = \".raw\", replacement = \"\", #> fixed = TRUE)) #>  → creation_date = as.POSIXct(CreationDate) #>  → in_aquisition = as.logical(InAquisition) #>  → (.*) = as.character(all_matches(\"(.*)\")) #> Dataset scans: #>  → scan.no = as.integer(scan.no) #>  → time.min = as.numeric(StartTime) #>  → tic = as.numeric(TIC) #>  → it.ms = as.numeric(`Ion Injection Time (ms)`) #>  → resolution = as.numeric(one_of(`FT Resolution`, `Orbitrap Resolution`)) #>  → microscans = as.integer(`Micro Scan Count`) #>  → basePeakMz = as.numeric(BasePeakMass) #>  → basePeakIntensity = as.numeric(BasePeakIntensity) #>  → lowMass = as.numeric(LowMass) #>  → highMass = as.numeric(HighMass) #>  → rawOvFtT = as.numeric(RawOvFtT) #>  → intensCompFactor = as.numeric(`OT Intens Comp Factor`) #>  → agc = as.character(AGC) #>  → agcTarget = as.integer(`AGC Target`) #>  → numberLockmassesFound = as.integer(`Number of LM Found`) #>  → analyzerTemperature = as.numeric(`Analyzer Temperature`) #> Dataset peaks: #>  → scan.no = as.integer(scan.no) #>  → mzMeasured = as.numeric(mass) #>  → intensity = as.numeric(intensity) #>  → baseline = as.numeric(baseline) #>  → peakNoise = as.numeric(noise) #>  → peakResolution = as.numeric(resolution) #>  → isRefPeak = as.logical(is_ref) #>  → isLockPeak = as.logical(is_lock_peak) #> Dataset spectra: #>  → scan.no = as.integer(scan.no) #>  → mz = as.numeric(mass) #>  → intensity = as.numeric(intensity) #>  #> $aggregators$extended #> ────────────────────────────── Aggregator extended ───────────────────────────── #> Dataset file_info: #>  → filename = as.character(sub(FileName, pattern = \".raw\", replacement = \"\", #> fixed = TRUE)) #>  → creation_date = as.POSIXct(CreationDate) #>  → in_aquisition = as.logical(InAquisition) #>  → (.*) = as.character(all_matches(\"(.*)\")) #> Dataset scans: #>  → scan.no = as.integer(scan.no) #>  → time.min = as.numeric(StartTime) #>  → tic = as.numeric(TIC) #>  → it.ms = as.numeric(`Ion Injection Time (ms)`) #>  → resolution = as.numeric(one_of(`FT Resolution`, `Orbitrap Resolution`)) #>  → microscans = as.integer(`Micro Scan Count`) #>  → basePeakMz = as.numeric(BasePeakMass) #>  → basePeakIntensity = as.numeric(BasePeakIntensity) #>  → lowMass = as.numeric(LowMass) #>  → highMass = as.numeric(HighMass) #>  → rawOvFtT = as.numeric(RawOvFtT) #>  → intensCompFactor = as.numeric(`OT Intens Comp Factor`) #>  → agc = as.character(AGC) #>  → agcTarget = as.integer(`AGC Target`) #>  → numberLockmassesFound = as.integer(`Number of LM Found`) #>  → analyzerTemperature = as.numeric(`Analyzer Temperature`) #>  → (.*) = as.character(all_matches(\"(.*)\")) #> Dataset peaks: #>  → scan.no = as.integer(scan.no) #>  → mzMeasured = as.numeric(mass) #>  → intensity = as.numeric(intensity) #>  → baseline = as.numeric(baseline) #>  → peakNoise = as.numeric(noise) #>  → peakResolution = as.numeric(resolution) #>  → isRefPeak = as.logical(is_ref) #>  → isLockPeak = as.logical(is_lock_peak) #> Dataset spectra: #>  → scan.no = as.integer(scan.no) #>  → mz = as.numeric(mass) #>  → intensity = as.numeric(intensity) #>  #>  #> $debug #> [1] FALSE #>  #> $auto_use_ansi #> [1] TRUE #>   # Options that contain 'data' in the name orbi_get_options(\"data\") #> $data_type_data #> [1] \"data\" #>  #> $data_type_startup #> [1] \"startup\" #>  #> $data_type_changeover #> [1] \"changeover\" #>  #> $data_type_unused #> [1] \"unused\" #>   # Specific option orbi_get_option(\"data_type_unused\") #> [1] \"unused\"  # Change an option orbi_options(data_type_unused = \"flagged\") orbi_get_option(\"data_type_unused\") #> [1] \"flagged\"  # Change back to default orbi_options(data_type_unused = NULL) orbi_get_option(\"data_type_unused\") #> [1] \"unused\""},{"path":"https://isoorbi.isoverse.org/reference/orbi_plot_raw_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize data — orbi_plot_raw_data","title":"Visualize data — orbi_plot_raw_data","text":"Call function visualize orbitrap data vs. time scan number. common uses orbi_plot_raw_data(y = intensity), orbi_plot_raw_data(y = ratio), orbi_plot_raw_data(y = tic * .ms). selected y peak-specific data (rather scan-specific data like tic * .ms), isotopocules argument can used narrow isotopocules plotted. default includes isotopcules previously identified orbi_flag_weak_isotopcules() (already called dataset).","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_plot_raw_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize data — orbi_plot_raw_data","text":"","code":"orbi_plot_raw_data(   dataset,   isotopocules = c(),   x = c(\"time.min\", \"scan.no\"),   x_breaks = scales::breaks_pretty(5),   y,   y_scale = c(\"raw\", \"linear\", \"pseudo-log\", \"log\"),   y_scale_sci_labels = TRUE,   color = .data$isotopocule,   colors = c(\"#1B9E77\", \"#D95F02\", \"#7570B3\", \"#E7298A\", \"#66A61E\", \"#E6AB02\", \"#A6761D\",     \"#666666\", \"#BBBBBB\"),   color_scale = scale_color_manual(values = colors),   add_data_blocks = TRUE,   add_all_blocks = FALSE,   show_outliers = TRUE )"},{"path":"https://isoorbi.isoverse.org/reference/orbi_plot_raw_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize data — orbi_plot_raw_data","text":"dataset aggregated dataset data frame peaks (.e. works directly orbi_identify_isotopocules() well tibble orbi_get_data(peaks = everything()) reading IsoX file) isotopocules isotopocules visualize, none provided visualize (may take long time even crash R session many isotopocules data set) x x-axis column plot, either \"time.min\" \"scan.\", default \"scan.\" x_breaks breaks use x axis, change make specifid tickmarks y expression plot y-axis, e.g. intensity, tic * .ms (pick one isotopocules identical different istopocules), ratio. Depending variable, may want adjust y_scale potentially y_scale_sci_labels argument. y_scale type y scale use: \"log\" scale, \"pseudo-log\" scale (smoothly transitions linear scale around 0), \"linear\" scale, \"raw\" (want add y scale plot manually instead) y_scale_sci_labels whether render numbers scientific exponential notation color expression use color aesthetic, default isotopocule colors colors use, default color-blind friendly color palettes (RColorBrewer, dark2) color_scale use parameter replace entire color scale rather just colors add_data_blocks add highlight data blocks block definitions dataset (uses orbi_add_blocks_to_plot()). add blocks manually, set add_data_blocks = FALSE manually call orbi_add_blocks_to_plot() function afterwards. add_all_blocks add highlight blocks, just data blocks (equivalent data_only = FALSE argument orbi_add_blocks_to_plot()) show_outliers whether highlight data previously flagged outliers orbi_flag_outliers()","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_plot_raw_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize data — orbi_plot_raw_data","text":"ggplot object","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_plot_satellite_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize satellite peaks — orbi_plot_satellite_peaks","title":"Visualize satellite peaks — orbi_plot_satellite_peaks","text":"Call function time flagging satellite peaks see . Use isotopocules argument focus specific isotopocules interest.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_plot_satellite_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize satellite peaks — orbi_plot_satellite_peaks","text":"","code":"orbi_plot_satellite_peaks(   dataset,   isotopocules = c(),   x = c(\"scan.no\", \"time.min\"),   y = c(\"ions.incremental\", \"intensity\"),   x_breaks = scales::breaks_pretty(5),   y_scale = c(\"log\", \"pseudo-log\", \"linear\", \"raw\"),   y_scale_sci_labels = TRUE,   colors = c(\"#1B9E77\", \"#D95F02\", \"#7570B3\", \"#E7298A\", \"#66A61E\", \"#E6AB02\", \"#A6761D\",     \"#666666\", \"#BBBBBB\"),   color_scale = scale_color_manual(values = colors) )"},{"path":"https://isoorbi.isoverse.org/reference/orbi_plot_satellite_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize satellite peaks — orbi_plot_satellite_peaks","text":"dataset data frame aggregated dataset satellite peaks already identified (.e. orbi_flag_satellite_peaks()) isotopocules isotopocules visualize, none provided visualize (may take long time even crash R session many isotopocules data set) x x-axis column plot, either \"time.min\" \"scan.\", default \"scan.\" y y-axis column plot, typially either \"ions.incremental\" \"intensity\", default \"ions.incremental\" (falls back \"intensity\" \"ions.incremental\" calculated yet provided dataset) x_breaks breaks use x axis, change make specifid tickmarks y_scale type y scale use: \"log\" scale, \"pseudo-log\" scale (smoothly transitions linear scale around 0), \"linear\" scale, \"raw\" (want add y scale plot manually instead) y_scale_sci_labels whether render numbers scientific exponential notation colors colors use, default color-blind friendly color palettes (RColorBrewer, dark2) color_scale use parameter replace entire color scale rather just colors","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_plot_satellite_peaks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize satellite peaks — orbi_plot_satellite_peaks","text":"ggplot object","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_plot_shot_noise.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a shot noise plot — orbi_plot_shot_noise","title":"Make a shot noise plot — orbi_plot_shot_noise","text":"function creates shot noise plot using shotnoise data frame created orbi_analyze_shot_noise() function.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_plot_shot_noise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a shot noise plot — orbi_plot_shot_noise","text":"","code":"orbi_plot_shot_noise(   shotnoise,   x = c(\"time.min\", \"n_effective_ions\"),   permil_target = NA_real_,   color = \"ratio_label\",   colors = c(\"#1B9E77\", \"#D95F02\", \"#7570B3\", \"#E7298A\", \"#66A61E\", \"#E6AB02\", \"#A6761D\",     \"#666666\") )"},{"path":"https://isoorbi.isoverse.org/reference/orbi_plot_shot_noise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a shot noise plot — orbi_plot_shot_noise","text":"shotnoise shotnoise data frame x x-axis shot noise plot, either \"time.min\" \"n_effective_ions\" permil_target highlight target permil shotnoise plot color column use color aesthetic (must factor) colors colors use, default color-blind friendly color palettes (RColorBrewer, dark2)","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_plot_shot_noise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a shot noise plot — orbi_plot_shot_noise","text":"ggplot object","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_plot_shot_noise.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make a shot noise plot — orbi_plot_shot_noise","text":"plot shot noise","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_plot_spectra.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot mass spectra — orbi_plot_spectra","title":"Plot mass spectra — orbi_plot_spectra","text":"function visualizes mass spectra aggregated raw file data. spectra previously read include_spectra = c(1, 10, 100) orbi_read_raw(). default, function tries visualize different isotopcule ranges (monoisotopic peak, M+1, M+2, M+3). focus isotopcules interest, run orbi_identify_isotopocules() orbi_filter_isotopocules() first.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_plot_spectra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot mass spectra — orbi_plot_spectra","text":"","code":"orbi_plot_spectra(   aggregated_data,   mz_min = 0,   mz_max = Inf,   mz_base_peak = NULL,   mz_focus_nominal_offsets = 0:4,   max_scans = 6,   max_files = 4,   label_peaks = TRUE,   show_filenames = TRUE,   show_ref_and_lock_peaks = TRUE,   show_focus_backgrounds = TRUE,   background_colors = c(\"#1B9E77\", \"#D95F02\", \"#7570B3\", \"#E7298A\", \"#66A61E\", \"#E6AB02\",     \"#A6761D\", \"#666666\", \"#BBBBBB\") )"},{"path":"https://isoorbi.isoverse.org/reference/orbi_plot_spectra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot mass spectra — orbi_plot_spectra","text":"aggregated_data data aggregated orbi_aggregate_raw() , optionally, isotopocules already identified orbi_identify_isotopocules(), (also optionally), alreadty filtered orbi_filter_isotopocules() mz_min mz start main plot window . default include . mz_max mz end main plot window . default include . mz_base_peak base peak (approximately)?. specified (default), takes largest peak mz_min mz_max window. mz_focus_nominal_offsets panels visualize? 0 = whole spectrum, 1 = spectrum around monoisotopic peak + 1 mu (M+1), 2 = M+2, etc. default includes whole spectrum +1, +2, +3, +4 peaks (exist). visualize whole spectrum, use mz_focus_nominal_offsets = 0. Likewise, visualize area around monoisotopic peak +1, provide mz_focus_monimal_offsets = 1 (= c(1, 2) +1 +2 windows). max_scans spectra many scans show . default 6 (number available linetypes). show spectrum single scan, set max_scans = 1. 6 scan spectra allowed (6 loaded aggregated_data), turns linetype aesthetic. max_files spectra many files show . file shown additional line panels. label_peaks whether label peaks M+1/2/3 panels. isotopcules already identified orbi_identify_isotopocules(), uses isotopcule names, otherwise m/z values. Peaks missing (identified orbi_identify_isotopocules()) spectra highlighted red. avoid labeling unidentified/missing peaks, run orbi_filter_isotopocules() first. show_filenames whether show filename first panel reach row (usually full spectrum panel) show_ref_and_lock_peaks whether show reference lock mass peaks spectrum show_focus_backgrounds whether highlight M+x panels specific background colors match mass bands highlighted first panel background_colors colors use background highlighting","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_read_isox.html","id":null,"dir":"Reference","previous_headings":"","what":"Read IsoX file — orbi_read_isox","title":"Read IsoX file — orbi_read_isox","text":"Read IsoX dataput file (.isox) tibble data frame.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_read_isox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read IsoX file — orbi_read_isox","text":"","code":"orbi_read_isox(file)"},{"path":"https://isoorbi.isoverse.org/reference/orbi_read_isox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read IsoX file — orbi_read_isox","text":"file Path .isox file(s), single value vector paths","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_read_isox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read IsoX file — orbi_read_isox","text":"tibble containing minimum columns filename, scan., time.min, compound, isotopocule, ions.incremental, tic, .ms","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_read_isox.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read IsoX file — orbi_read_isox","text":"Additional information columns: filename: name original Thermo .raw file processed IsoX scan.: scan number time.min: acquisition retention time minutes compound: name compound (e.g., NO3-) isotopocule: name isotopocule (e.g., 15N); called isotopolog .isox ions.incremental: estimated number ions, increments since calculated number tic: total ion current (TIC) scan .ms: scan injection time () millisecond (ms)","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_read_isox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read IsoX file — orbi_read_isox","text":"","code":"fpath <- system.file(\"extdata\", \"testfile_dual_inlet.isox\", package = \"isoorbi\") df <- orbi_read_isox(file = fpath) #> ✔ [10ms] orbi_read_isox() loaded 5184 peaks for 1 compound (NO3-) with 6 #> isotopocules (15N, 17O, 18O, 15N18O, 17O18O, and 18O18O) from #> testfile_dual_inlet.isox"},{"path":"https://isoorbi.isoverse.org/reference/orbi_read_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Read RAW files — orbi_read_raw","title":"Read RAW files — orbi_read_raw","text":"Read raw data files (.raw) Orbitrap IRMS runs directly. function extracts available information thus can relatively slow (~1s / Mb typical personal computer) caching true first time. results can used directly , typically, aggregated orbi_aggregate_raw() safely extract relevant information downstream processing.  function designed fail save safely catching errors reporting back (see orbi_get_problems()).","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_read_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read RAW files — orbi_read_raw","text":"","code":"orbi_read_raw(   file_paths,   show_progress = rlang::is_interactive(),   show_problems = TRUE,   include_spectra = FALSE,   read_cache = TRUE,   cache = TRUE,   cache_spectra = cache,   keep_cached_spectra = cache )"},{"path":"https://isoorbi.isoverse.org/reference/orbi_read_raw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read RAW files — orbi_read_raw","text":"file_paths paths .raw file(s), single value vector paths. Use orbi_find_raw() get raw files folder. show_progress whether show progress bar, default always enabled running interactively e.g. inside RStudio (disabled notebook), turn show_progress = FALSE show_problems whether show problems encountered along way (rather just keeping track orbi_get_problems()). Set show_problems = FALSE turn live printout. Either way, encountered problems can retrieved running orbi_get_problems() returned list include_spectra whether include spectral data specific scans (e.g. include_spectra = c(5, 100, 200) reads spectra scans 5, 100, 200 file exist) scans (include_spectra = TRUE). Including many scan spectra makes read process slower (especially cache_spectra = FALSE) returned data frame tibble significantely larger. default FALSE (.e. scan spectra returned). read_cache whether read file cached .parquet files (exist) anew cache whether automatically cache read raw files (writes highly efficient .parquet files folder name file .cache appended) cache_spectra whether automatically cache requested scan spectra (can take significant disc space), default cache keep_cached_spectra whether keep spectra raw file previously cached whenever include_spectra changes requires reading file anew. TRUE (default) makes faster iterate code changes spectra read leads larger cache files.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_read_raw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read RAW files — orbi_read_raw","text":"tibble data frame row holds file path nested tibbles datasets extracted raw file (typically file_info, scans, peaks, spectra). safest way extract data without needing make assumptions compatibility across files. Extract data interest tibble columns use orbi_aggregate_raw() extract safely across files.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_segment_blocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Segment data blocks — orbi_segment_blocks","title":"Segment data blocks — orbi_segment_blocks","text":"step optional intended make easy explore data within sample ref data block. Note raw data identified data_type set \"data\" (orbi_get_option(\"data_type_data\")) stay unsegmented. includes raw data flagged \"startup\", \"changeover\", \"unused\".","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_segment_blocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Segment data blocks — orbi_segment_blocks","text":"","code":"orbi_segment_blocks(   dataset,   into_segments = NULL,   by_scans = NULL,   by_time_interval = NULL )"},{"path":"https://isoorbi.isoverse.org/reference/orbi_segment_blocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Segment data blocks — orbi_segment_blocks","text":"dataset aggregated dataset data frame peaks (.e. works directly orbi_identify_isotopocules() well tibble orbi_get_data(peaks = everything()) reading IsoX file) into_segments segment data block many segments. result exactly number segments data block except segments requested observations group (case observation one segment) by_scans segment data block segments spanning number scans. result approximately requested number scans per segment, depending sensible distribution data. example, hypothetical data block 31 scans, by_scans = 10, function create 3 segments 11, 10 10 scans (evenly distributed), instead 4 segments 10, 10, 10, 1 (less evenly distributed). by_time_interval segment data block segments spanning time interval. result requested time interval segments except usually last one almost always shorter requested interval.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_set_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Set package settings — orbi_set_settings","title":"Set package settings — orbi_set_settings","text":"orbi_set_settings() renamed orbi_options() part isoorbi switching 'settings' 'options' consistent base R naming conventions","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_set_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set package settings — orbi_set_settings","text":"","code":"orbi_set_settings(...)"},{"path":"https://isoorbi.isoverse.org/reference/orbi_set_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set package settings — orbi_set_settings","text":"... named arguments set specific options, passed orbi_options()","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_simplify_isox.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify IsoX data — orbi_simplify_isox","title":"Simplify IsoX data — orbi_simplify_isox","text":"Keep columns directly relevant isotopocule ratio analysis. function optional affect downstream function calls.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_simplify_isox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify IsoX data — orbi_simplify_isox","text":"","code":"orbi_simplify_isox(dataset, add = c())"},{"path":"https://isoorbi.isoverse.org/reference/orbi_simplify_isox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify IsoX data — orbi_simplify_isox","text":"dataset IsoX data simplified add additional columns keep","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_simplify_isox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify IsoX data — orbi_simplify_isox","text":"tibble containing 9 columns: filepath, filename, scan., time.min, compound, isotopocule, ions.incremental, tic, .ms, plus additional columns defined add argument","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_simplify_isox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplify IsoX data — orbi_simplify_isox","text":"","code":"fpath <- system.file(\"extdata\", \"testfile_flow.isox\", package=\"isoorbi\") df <- orbi_read_isox(file = fpath) |> orbi_simplify_isox() #> ✔ [21ms] orbi_read_isox() loaded 6449 peaks for 1 compound (HSO4-) with 5 #> isotopocules (M0, 33S, 17O, 34S, and 18O) from testfile_flow.isox #> ✔ [5ms] orbi_simplify_isox() kept columns filepath, filename, scan.no, #> time.min, compound, isotopocule, ions.incremental, tic, and it.ms"},{"path":"https://isoorbi.isoverse.org/reference/orbi_summarize_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the results table — orbi_summarize_results","title":"Generate the results table — orbi_summarize_results","text":"Contains logic generate results table. passes  ratio_method parameter orbi_calculate_summarized_ratio() function ratio calculations.","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_summarize_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the results table — orbi_summarize_results","text":"","code":"orbi_summarize_results(   dataset,   ratio_method = c(\"mean\", \"sum\", \"median\", \"geometric_mean\", \"slope\", \"weighted_sum\"),   .by = c(\"block\", \"sample_name\", \"segment\", \"data_group\", \"data_type\", \"injection\"),   include_flagged_data = FALSE,   include_unused_data = FALSE )"},{"path":"https://isoorbi.isoverse.org/reference/orbi_summarize_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the results table — orbi_summarize_results","text":"dataset aggregated dataset data frame peaks (.e. works directly orbi_identify_isotopocules() well tibble orbi_get_data(peaks = everything()) reading IsoX file) ratio_method Method computing ratio. Please note well: formula used calculate ion ratios matters! simply use arithmetic mean. best option may depend type data processing (e.g., MS1 versus M+1 fragmentation). ratio_method can one following: mean: arithmetic mean ratios individual scans. sum: sum ions numerator across scans divided sum ions observed denominator across scans. geometric_mean: geometric mean ratios individual scans. slope: ratio calculated using slope obtained linear regression model weighted numerator x, using stats::lm(x ~ y + 0, weights = x). weighted_sum: derivative sum option. weighing function ensures scan contributes equal weight ratio calculation, .e. scans ions Orbitrap contribute disproportionately total sum x y used calculate x/y. .additional grouping columns results summary (akin dplyr's .parameter e.g. dplyr::summarize()). set user, columns parameter's default values used, present dataset. Note order also used arrange summary. include_flagged_data whether include flagged data calculations (FALSE default) include_unused_data whether include unused data calculations (FALSE default), addition peaks actually flagged orbi_get_option(\"data_type_data\")","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_summarize_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the results table — orbi_summarize_results","text":"Returns results summary table (tibble dataset tibble, dataset$tibble dataset aggregated raw data) columns filename, compound, isotopocule basepeak well grouping columns .parameter part input dataset. Additionally function adds following results columns: start_scan., end_scan., start_time.min, mean_time.min, end_time.min, ratio, ratio_sem, ratio_relative_sem_permil, shot_noise_permil, ..Scans, minutes_to_1e6_ions ratio: isotope ratio isotopocule basepeak, calculated using ratio_method ratio_sem: Standard error mean ratio number_of_scans: Number scans used final ratio calculation minutes_to_1e6_ions: Time minutes take observe 1 million ions isotopocule used numerator ratio calculation. shot_noise_permil: Estimate shot noise (correctly thermal noise) reported ratio permil. ratio_relative_sem_permil: Relative standard error reported ratio permil","code":""},{"path":"https://isoorbi.isoverse.org/reference/orbi_summarize_results.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate the results table — orbi_summarize_results","text":"","code":"fpath <- system.file(\"extdata\", \"testfile_flow.isox\", package = \"isoorbi\") df <- orbi_read_isox(file = fpath) |>       orbi_simplify_isox() |>       orbi_define_basepeak(\"M0\")  |>       orbi_summarize_results(ratio_method = \"sum\") #> ✔ [20ms] orbi_read_isox() loaded 6449 peaks for 1 compound (HSO4-) with 5 #> isotopocules (M0, 33S, 17O, 34S, and 18O) from testfile_flow.isox #> ✔ [5ms] orbi_simplify_isox() kept columns filepath, filename, scan.no, #> time.min, compound, isotopocule, ions.incremental, tic, and it.ms #> ✔ [142ms] orbi_define_basepeak() set M0 as the ratio denominator and calculated #> 5.16k ratio values for 4 isotopocules (33S, 17O, 34S, and 18O) #> ✔ [89ms] orbi_summarize_results() summarized ratios from 5.16k peak using the #> sum method and grouping the data by filename, compound, basepeak, and #> isotopocule"},{"path":"https://isoorbi.isoverse.org/reference/problems.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve parsing problems — orbi_get_problems","title":"Retrieve parsing problems — orbi_get_problems","text":"function retrieves parsing problems encountered reading processing files. function prints parsing problems encountered reading processing files.","code":""},{"path":"https://isoorbi.isoverse.org/reference/problems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve parsing problems — orbi_get_problems","text":"","code":"orbi_get_problems(obj, strip_ansi = TRUE)  orbi_show_problems(obj)"},{"path":"https://isoorbi.isoverse.org/reference/problems.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve parsing problems — orbi_get_problems","text":"obj data object holds problems information strip_ansi whether remove ansi characters message, yes default","code":""},{"path":"https://isoorbi.isoverse.org/reference/problems.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve parsing problems — orbi_get_problems","text":"tibble data frame list problems encountered processing","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"isoorbi-152","dir":"Changelog","previous_headings":"","what":"isoorbi 1.5.2","title":"isoorbi 1.5.2","text":"CRAN release: 2025-10-03 minor update decrease package size CRAN.","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"enhancements-1-5-2","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"isoorbi 1.5.2","text":"added orbi_get_example_files() can download additional example files provide easier access test files users","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"isoorbi-151","dir":"Changelog","previous_headings":"","what":"isoorbi 1.5.1","title":"isoorbi 1.5.1","text":"minor update enhance usability.","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"enhancements-1-5-1","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"isoorbi 1.5.1","text":"show panel lables spectral plots, .e. M+1, M+2, etc. (#93) align x-axes spectral plots (#98) introduce default_tolerance default_charge parameters orbi_identify_isotopocules (#95) automatically calculate ions orbi_identify_isotopocules provide stastic ion counts identified running orbi_identify_isotopocules (#94) provide informative error orbi_read_raw fails raw file still acquired provide orbi_get_example_files function one-point stop get system package test files well downloadable test files orbi_find_raw now finds .raw .RAW extensions (.e. longer case-sensitive)","code":""},{"path":[]},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"breaking-changes-1-5-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"isoorbi 1.5.0","text":"breaking changes release (changes new features backwards compatible).","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"new-features-1-5-0","dir":"Changelog","previous_headings":"","what":"New features","title":"isoorbi 1.5.0","text":"implemented optimized expanded raw file reader (isoraw) packaged isoorbi used orbi_read_raw() implemented versatile isotopocule mapping via orbi_identifiy_isotopocule() csv, tsv, excel inputs implemented orbi_calculate_ions() calculate ions peak intensities noise flexible CN RN parameters implemented orbi_plot_spectra() plot","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"enhancements-1-5-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"isoorbi 1.5.0","text":"upgraded data processing plotting functions compatible isox raw file datasets improved default print outputs S3 classes used package improved package structure documentation expanded orbi_flag_outliers() functionality (contributed Florian Rubach)","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"bug-fixes-1-5-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"isoorbi 1.5.0","text":"fixed incompatibility ggplot2 version 4.0.0 (#69)","code":""},{"path":[]},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"breaking-changes-1-4-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"isoorbi 1.4.0","text":"breaking changes release (changes new features backwards compatible).","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"new-features-1-4-0","dir":"Changelog","previous_headings":"","what":"New features","title":"isoorbi 1.4.0","text":"implemented direct reading caching orbitrap IRMS raw files (orbi_read_read()) via rawrr package use CLI clearer informative info messages functions","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"enhancements-1-4-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"isoorbi 1.4.0","text":"renamed package “settings” package “options” consistent naming conventions base R (orbi_options() replaces orbi_set_settings() orbi_get_options() / orbi_get_option() replaces orbi_get_settings()) improved functionality options loading defaults","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"isoorbi-131","dir":"Changelog","previous_headings":"","what":"isoorbi 1.3.1","title":"isoorbi 1.3.1","text":"CRAN release: 2024-08-27 patch containing compatibility updates.","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"isoorbi-130","dir":"Changelog","previous_headings":"","what":"isoorbi 1.3.0","title":"isoorbi 1.3.0","text":"CRAN release: 2023-11-09 minor release adding new features.","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"breaking-changes-1-3-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"isoorbi 1.3.0","text":"breaking changes release (changes new features backwards compatible).","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"new-features-1-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"isoorbi 1.3.0","text":"Plotting functions: orbi_plot_satellite_peaks() implemented orbi_plot_isotopocule_coverage() implemented orbi_plot_raw_data() implemented Information functions: orbi_get_isotopocule_coverage()","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"enhancements-1-3-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"isoorbi 1.3.0","text":"orbi_simplify_isox() now includes intensity default allows addition user-specified columns orbi_flag_satellite_peaks(), orbi_flag_weak_isotopocules() orbi_flag_outliers() now provide additional information data flagged visualize flagged (anything)","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"bug-fixes-1-3-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"isoorbi 1.3.0","text":"orbi_add_blocks_to_plot() now supports log scale axes","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"isoorbi-120","dir":"Changelog","previous_headings":"","what":"isoorbi 1.2.0","title":"isoorbi 1.2.0","text":"minor release adding new features.","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"breaking-changes-1-2-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"isoorbi 1.2.0","text":"breaking changes release (changes new features backwards compatible).","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"new-features-1-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"isoorbi 1.2.0","text":"orbi_find_isox() added orbi_analyze_noise() implemented orbi_plot_shot_noise() implemented orbi_flag_satellite_peaks(), orbi_flag_weak_isotopocules() orbi_flag_outliers() supersede orbi_filter_satellite_peaks(), orbi_filter_weak_isotopocules() orbi_filter_scan_intensity() orbi_export_data_to_excel() implemented orbi_define_block_for_flow_injection() implemented orbi_add_blocks_to_plot() implemented","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"enhancements-1-2-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"isoorbi 1.2.0","text":"loading utility functions provide details info message done, affected, long took loading utility functions catch processing errors report information back user orbi_read_isox() now can read multiple .isox files includes .isox filepath resulting tibble","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"bug-fixes-1-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"isoorbi 1.2.0","text":"data frame groupings introduced flagging/filtering functions now removed end function","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"isoorbi-110","dir":"Changelog","previous_headings":"","what":"isoorbi 1.1.0","title":"isoorbi 1.1.0","text":"CRAN release: 2023-06-24 minor release adding new features fixing bugs.","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"breaking-changes-1-1-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"isoorbi 1.1.0","text":"breaking changes release (changes new features backwards compatible).","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"new-features-1-1-0","dir":"Changelog","previous_headings":"","what":"New features","title":"isoorbi 1.1.0","text":"implemented functionality dual inlet data acquisitions, see orbi_define_blocks_for_dual_inlet() orbi_get_blocks_info() implemented package settings, using internal functions isoorbi::orbi_get_settings, isoorbi::orbi_set_settings","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"enhancements-1-1-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"isoorbi 1.1.0","text":"removed dependency stringr implemented native pipe |> (R version requirement increased 4.1.0) removed dependency magrittr added .parameter orbi_summarize_results() option manually adjust grouping","code":""},{"path":"https://isoorbi.isoverse.org/news/index.html","id":"bug-fixes-1-1-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"isoorbi 1.1.0","text":"dplyr changes joins explicit multiple argument. multiple now defaults “”, options “error” “warning” now deprecated favor using relationship.","code":""}]
